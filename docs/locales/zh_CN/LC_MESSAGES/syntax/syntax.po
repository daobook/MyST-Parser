# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Executable Book Project
# This file is distributed under the same license as the MyST Parser
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MyST Parser 0.15.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-19 16:16+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../syntax/syntax.md:3
msgid "The MyST Syntax Guide"
msgstr ""

#: ../../syntax/syntax.md:5
msgid "{sub-ref}`today` | {sub-ref}`wordcount-minutes` min read"
msgstr ""

#: ../../syntax/syntax.md:7
msgid ""
"As a base, MyST adheres to the [CommonMark "
"specification](https://spec.commonmark.org/). For this, it uses the "
"[markdown-it-py](https://github.com/executablebooks/markdown-it-py) "
"parser, which is a well-structured markdown parser for Python that is "
"CommonMark-compliant and also extensible."
msgstr ""

#: ../../syntax/syntax.md:12
msgid ""
"MyST adds several new syntax options to CommonMark in order to be used "
"with Sphinx, the documentation generation engine used extensively in the "
"Python ecosystem."
msgstr ""

#: ../../syntax/syntax.md:16
msgid ""
"Below is a summary of the syntax 'tokens' parsed, and further details of "
"a few major extensions from the CommonMark flavor of markdown."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"For an introduction to writing Directives and Roles with MyST markdown, "
"see {ref}`intro/writing`."
msgstr ""

#: ../../syntax/syntax.md:2
msgid ""
"Check out the [MyST-Markdown VS Code "
"extension](https://marketplace.visualstudio.com/items?itemName=ExecutableBookProject"
".myst-highlight), for MyST extended syntax highlighting."
msgstr ""

#: ../../syntax/syntax.md:24
msgid ""
"MyST builds on the tokens defined by markdown-it, to extend the syntax "
"described in the [CommonMark Spec](https://spec.commonmark.org/0.29/), "
"which the parser is tested against."
msgstr ""

#: ../../syntax/syntax.md:31
msgid "Directives - a block-level extension point"
msgstr ""

#: ../../syntax/syntax.md:33
msgid ""
"Directives syntax is defined with triple-backticks and curly-brackets. It"
" is effectively a code block with curly brackets around the language, and"
" a directive name in place of a language name. It is similar to how "
"RMarkdown defines \"runnable cells\". Here is the basic structure:"
msgstr ""

#: ../../syntax/syntax.md:1 ../../syntax/syntax.md:2
msgid "MyST"
msgstr ""

#: ../../syntax/syntax.md:2 ../../syntax/syntax.md:3
msgid "reStructuredText"
msgstr ""

#: ../../syntax/syntax.md:64 ../../syntax/syntax.md:304
msgid "For example, the following code:"
msgstr ""

#: ../../syntax/syntax.md:72
msgid "Will generate this admonition:"
msgstr ""

#: ../../syntax/syntax.md:74
msgid "This is my admonition"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "This is my note"
msgstr ""

#: ../../syntax/syntax.md:78
msgid "Parameterizing directives"
msgstr ""

#: ../../syntax/syntax.md:80
msgid ""
"For directives that take parameters as input, there are two ways to "
"parameterize them. In each case, the options themselves are given as "
"`key: value` pairs. An example of each is shown below:"
msgstr ""

#: ../../syntax/syntax.md:84
msgid ""
"**Using YAML frontmatter**. A block of YAML front-matter just after the "
"first line of the directive will be parsed as options for the directive. "
"This needs to be surrounded by `---` lines. Everything in between will be"
" parsed by YAML and passed as keyword arguments to your directive. For "
"example:"
msgstr ""

#: ../../syntax/syntax.md:104
msgid "This is my multi-line caption. It is *pretty nifty* ;-)"
msgstr ""

#: ../../syntax/syntax.md:117
msgid ""
"**Short-hand options with `:` characters**. If you only need one or two "
"options for your directive and wish to save lines, you may also specify "
"directive options as a collection of lines just after the first line of "
"the directive, each preceding with `:`. Then the leading `:` is removed "
"from each line, and the rest is parsed as YAML."
msgstr ""

#: ../../syntax/syntax.md:122
msgid "For example:"
msgstr ""

#: ../../syntax/syntax.md:136
msgid "How directives parse content"
msgstr ""

#: ../../syntax/syntax.md:138
msgid ""
"Some directives parse the content that is in their content block. MyST "
"parses this content **as Markdown**."
msgstr ""

#: ../../syntax/syntax.md:141
msgid ""
"This means that MyST markdown can be written in the content areas of any "
"directives written in MyST markdown. For example:"
msgstr ""

#: ../../syntax/syntax.md:149
msgid "My markdown link"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "Here is [markdown link syntax](https://jupyter.org)"
msgstr ""

#: ../../syntax/syntax.md:153
msgid ""
"As a short-hand for directives that require no arguments, and when no "
"parameter options are used (see below), you may start the content "
"directly after the directive name."
msgstr ""

#: ../../syntax/syntax.md:1
msgid "Notes require **no** arguments, so content can start here."
msgstr ""

#: ../../syntax/syntax.md:164
msgid ""
"For special cases, MySt also offers the `eval-rst` directive. This will "
"parse the content **as ReStructuredText**:"
msgstr ""

#: ../../syntax/syntax.md:186
msgid "Party time!"
msgstr ""

#: ../../syntax/syntax.md:188
msgid "A reference from inside: :ref:`rst-fun-fish`"
msgstr ""

#: ../../syntax/syntax.md:190
msgid "A reference from outside: :ref:`syntax/directives/parsing`"
msgstr ""

#: ../../syntax/syntax.md:193
msgid ""
"Note how the text is integrated into the rest of the document, so we can "
"also reference [party fish](rst-fun-fish) anywhere else in the "
"documentation."
msgstr ""

#: ../../syntax/syntax.md:195
msgid "Nesting directives"
msgstr ""

#: ../../syntax/syntax.md:197
msgid ""
"You can nest directives by ensuring that the tick-lines corresponding to "
"the outermost directive are longer than the tick-lines for the inner "
"directives. For example, nest a warning inside a note block like so:"
msgstr ""

#: ../../syntax/syntax.md:210
msgid "Here's how it looks rendered:"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "The next info should be nested"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "Here's my warning"
msgstr ""

#: ../../syntax/syntax.md:219
msgid ""
"You can indent inner-code fences, so long as they aren't indented by more"
" than 3 spaces. Otherwise, they will be rendered as \"raw code\" blocks:"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "The warning block will be properly-parsed"
msgstr ""

#: ../../syntax/syntax.md:7
msgid "But the next block will be parsed as raw text"
msgstr ""

#: ../../syntax/syntax.md:252
msgid "This can really be abused if you'd like ;-)"
msgstr ""

#: ../../syntax/syntax.md:2
msgid "Yep another admonition"
msgstr ""

#: ../../syntax/syntax.md:267
msgid "Markdown-friendly directives"
msgstr ""

#: ../../syntax/syntax.md:269
msgid ""
"Want to use syntax that renders correctly in standard Markdown editors? "
"See [the extended syntax option](syntax/colon_fence)."
msgstr ""

#: ../../syntax/syntax.md:1
msgid "This text is **standard** _Markdown_"
msgstr ""

#: ../../syntax/syntax.md:284
msgid "Roles - an in-line extension point"
msgstr ""

#: ../../syntax/syntax.md:286
msgid ""
"Roles are similar to directives - they allow you to define arbitrary new "
"functionality, but they are used *in-line*. To define an in-line role, "
"use the following form:"
msgstr ""

#: ../../syntax/syntax.md:310 ../../syntax/syntax.md:328
msgid "Becomes:"
msgstr ""

#: ../../syntax/syntax.md:312
msgid "Since Pythagoras, we know that {math}`a^2 + b^2 = c^2`"
msgstr ""

#: ../../syntax/syntax.md:314
msgid ""
"You can use roles to do things like reference equations and other items "
"in your book. For example:"
msgstr ""

#: ../../syntax/syntax.md:330
msgid ""
"e^{i\\pi} + 1 = 0\n"
"\n"
msgstr ""

#: ../../syntax/syntax.md:336
msgid ""
"Euler's identity, equation {math:numref}`euler`, was elected one of the "
"most beautiful mathematical formulas."
msgstr ""

#: ../../syntax/syntax.md:339
msgid "How roles parse content"
msgstr ""

#: ../../syntax/syntax.md:341
msgid ""
"The content of roles is parsed differently depending on the role that "
"you've used. Some roles expect inputs that will be used to change "
"functionality. For example, the `ref` role will assume that input content"
" is a reference to some other part of the site. However, other roles may "
"use the MyST parser to parse the input as content."
msgstr ""

#: ../../syntax/syntax.md:346
msgid ""
"Some roles also **extend their functionality** depending on the content "
"that you pass. For example, following the `ref` example above, if you "
"pass a string like this: `Content to display <myref>`, then the `ref` "
"will display `Content to display` and use `myref` as the reference to "
"look up."
msgstr ""

#: ../../syntax/syntax.md:351
msgid "How roles parse this content depends on the author that created the role."
msgstr ""

#: ../../syntax/syntax.md:356
msgid "Extra markdown syntax"
msgstr ""

#: ../../syntax/syntax.md:358
msgid ""
"In addition to roles and directives, MyST supports extra markdown syntax "
"that doesn't exist in CommonMark. In most cases, these are syntactic "
"short-cuts to calling roles and directives. We'll cover some common ones "
"below."
msgstr ""

#: ../../syntax/syntax.md:362
msgid "This table describes the rST and MyST equivalents:"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "Type"
msgstr ""

#: ../../syntax/syntax.md:4
msgid "Math shortcuts"
msgstr ""

#: ../../syntax/syntax.md:5
msgid "`$x^2$`"
msgstr ""

#: ../../syntax/syntax.md:6
msgid "N/A"
msgstr ""

#: ../../syntax/syntax.md:7
msgid "Front matter"
msgstr ""

#: ../../syntax/syntax.md:16 ../../syntax/syntax.md:470
msgid "Comments"
msgstr ""

#: ../../syntax/syntax.md:17
#, python-format
msgid "`% comment`"
msgstr ""

#: ../../syntax/syntax.md:18
msgid "`.. comment`"
msgstr ""

#: ../../syntax/syntax.md:19
msgid "Targets"
msgstr ""

#: ../../syntax/syntax.md:20
msgid "`(mytarget)=`"
msgstr ""

#: ../../syntax/syntax.md:21
msgid "`.. _mytarget:`"
msgstr ""

#: ../../syntax/syntax.md:393
msgid "Front Matter"
msgstr ""

#: ../../syntax/syntax.md:395
msgid ""
"This is a YAML block at the start of the document, as used for example in"
" [jekyll](https://jekyllrb.com/docs/front-matter/)."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"Top-matter is also used for the [substitution syntax "
"extension](syntax/substitutions), and can be used to store information "
"for blog posting (see [ablog's myst-parser "
"support](https://ablog.readthedocs.io/manual/markdown/))."
msgstr ""

#: ../../syntax/syntax.md:406
msgid "Setting HTML Metadata"
msgstr ""

#: ../../syntax/syntax.md:408
msgid ""
"The front-matter can contain the special key `html_meta`; a dict with "
"data to add to the generated HTML as [`<meta>` "
"elements](https://developer.mozilla.org/en-"
"US/docs/Web/HTML/Element/meta). This is equivalent to using the [RST "
"`meta` directive](https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/basics.html#html-metadata)."
msgstr ""

#: ../../syntax/syntax.md:411
msgid ""
"HTML metadata can also be added globally in the `conf.py` *via* the "
"`myst_html_meta` variable, in which case it will be added to all MyST "
"documents. For each document, the `myst_html_meta` dict will be updated "
"by the document level front-matter `html_meta`, with the front-matter "
"taking precedence."
msgstr ""

#: ../../syntax/syntax.md
msgid "Sphinx Configuration"
msgstr ""

#: ../../syntax/syntax.md
msgid "MyST Front-Matter"
msgstr ""

#: ../../syntax/syntax.md
msgid "RestructuredText"
msgstr ""

#: ../../syntax/syntax.md
msgid "HTML Output"
msgstr ""

#: ../../syntax/syntax.md:472
msgid ""
"You may add comments by putting the `%` character at the beginning of a "
"line. This will prevent the line from being parsed into the output "
"document."
msgstr ""

#: ../../syntax/syntax.md:475 ../../syntax/syntax.md:511
msgid "For example, this code:"
msgstr ""

#: ../../syntax/syntax.md:481 ../../syntax/syntax.md:517
msgid "Is below, but it won't be parsed into the document."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"Since comments are a block-level entity, they will terminate the previous"
" block. In practical terms, this means that the following lines will be "
"broken up into two paragraphs, resulting in a new line between them:"
msgstr ""

#: ../../syntax/syntax.md:11
msgid "a line"
msgstr ""

#: ../../syntax/syntax.md:13
msgid "another line"
msgstr ""

#: ../../syntax/syntax.md:503
msgid "Block Breaks"
msgstr ""

#: ../../syntax/syntax.md:505
msgid ""
"You may add a block break by putting `+++` at the beginning of a line. "
"This constuct's intended use case is for mapping to cell based document "
"formats, like [jupyter notebooks](https://jupyter.org/), to indicate a "
"new text cell. It will not show up in the rendered text, but is stored in"
" the internal document structure for use by developers."
msgstr ""

#: ../../syntax/syntax.md:523
msgid "Targets and Cross-Referencing"
msgstr ""

#: ../../syntax/syntax.md:525
msgid ""
"Targets are used to define custom anchors that you can refer to elsewhere"
" in your documentation. They generally go before section titles so that "
"you can easily refer to them."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"If you'd like to *automatically* generate targets for each of your "
"section headers, check out the [](syntax/header-anchors) section of "
"extended syntaxes."
msgstr ""

#: ../../syntax/syntax.md:536
msgid "Target headers are defined with this syntax:"
msgstr ""

#: ../../syntax/syntax.md:542
msgid ""
"They can then be referred to with the [ref inline role](https://www"
".sphinx-doc.org/en/master/usage/restructuredtext/roles.html#role-ref):"
msgstr ""

#: ../../syntax/syntax.md:548
msgid ""
"By default, the reference will use the text of the target (such as the "
"section title), but also you can directly specify the text:"
msgstr ""

#: ../../syntax/syntax.md:554
msgid ""
"For example, see this ref: {ref}`syntax/targets`, and here's a ref back "
"to the top of this page: {ref}`my text <example_syntax>`."
msgstr ""

#: ../../syntax/syntax.md:557
msgid "Alternatively using the markdown syntax:"
msgstr ""

#: ../../syntax/syntax.md:563
msgid ""
"is equivalent to using the [any inline role](https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/roles.html#role-any):"
msgstr ""

#: ../../syntax/syntax.md:569
msgid ""
"but can also accept \"nested\" syntax (like bold text) and will recognise"
" document paths that include extensions (e.g. `syntax/syntax` or "
"`syntax/syntax.md`)"
msgstr ""

#: ../../syntax/syntax.md:571
msgid ""
"Using the same example, see this ref: [](syntax/targets), here is a "
"reference back to the top of this page: [my text with **nested** "
"$\\alpha$ syntax](example_syntax), and here is a reference to another "
"page (`[](../sphinx/intro.md)`): [](../sphinx/intro.md)."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"If you wish to have the target's title inserted into your text, you can "
"leave the \"text\" section of the markdown link empty. For example, this "
"markdown: `[](syntax.md)` will result in: [](syntax.md)."
msgstr ""

#: ../../syntax/syntax.md:580
msgid "Tables"
msgstr ""

#: ../../syntax/syntax.md:582
msgid ""
"Tables can be written using the standard [Github Flavoured Markdown "
"syntax](https://github.github.com/gfm/#tables-extension-):"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "foo"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "bar"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "baz"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "bim"
msgstr ""

#: ../../syntax/syntax.md:594
msgid "Cells in a column can be aligned using the `:` character:"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "left"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "center"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "right"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "a"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "b"
msgstr ""

#: ../../syntax/syntax.md:574
msgid "c"
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"Text is aligned by assigning `text-left`, `text-center`, or `text-right` "
"to the cell. It is then necessary for the theme you are using to include "
"the appropriate css styling."
msgstr ""

#: ../../syntax/syntax.md:624
msgid "Images"
msgstr ""

#: ../../syntax/syntax.md:626
msgid ""
"MyST provides a few different syntaxes for including images in your "
"documentation."
msgstr ""

#: ../../syntax/syntax.md:628
msgid "The standard Markdown syntax is:"
msgstr ""

#: ../../syntax/syntax.md:634
msgid "![fishy](img/fun-fish.png)"
msgstr ""

#: ../../syntax/syntax.md:634
msgid "fishy"
msgstr ""

#: ../../syntax/syntax.md:636
msgid ""
"But you can also enable extended image syntaxes, to control attributes "
"like width and captions. See the [extended image syntax "
"guide](syntax/images)."
msgstr ""

#: ../../syntax/syntax.md:640
msgid "Footnotes"
msgstr ""

#: ../../syntax/syntax.md:642
msgid ""
"Footnotes use the [pandoc "
"specification](https://pandoc.org/MANUAL.html#footnotes). Their labels "
"**start with `^`** and can then be any alpha-numeric string (no spaces), "
"which is case-insensitive."
msgstr ""

#: ../../syntax/syntax.md:645
msgid ""
"If the label is an integer, then it will always use that integer for the "
"rendered label (i.e. they are manually numbered)."
msgstr ""

#: ../../syntax/syntax.md:646
msgid ""
"For any other labels, they will be auto-numbered in the order which they "
"are referenced, skipping any manually numbered labels."
msgstr ""

#: ../../syntax/syntax.md:648
msgid ""
"All footnote definitions are collected, and displayed at the bottom of "
"the page (in the order they are referenced). Note that un-referenced "
"footnote definitions will not be displayed."
msgstr ""

#: ../../syntax/syntax.md:659
msgid "This is a manually-numbered footnote reference.[^3]"
msgstr ""

#: ../../syntax/syntax.md:660
msgid "This is an auto-numbered footnote reference.[^myref]"
msgstr ""

#: ../../syntax/syntax.md:665
msgid ""
"Any preceding text after a footnote definitions, which is indented by "
"four or more spaces, will also be included in the footnote definition, "
"and the text is rendered as MyST Markdown, e.g."
msgstr ""

#: ../../syntax/syntax.md:683
msgid "A longer footnote definition.[^mylongdef]"
msgstr ""

#: ../../syntax/syntax.md:694
msgid "This is not part of the footnote."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"Although footnote references can be used just fine within directives, "
"e.g.[^myref], it it recommended that footnote definitions are not set "
"within directives, unless they will only be referenced within that same "
"directive:"
msgstr ""

#: ../../syntax/syntax.md:11
msgid "[^other]"
msgstr ""

#: ../../syntax/syntax.md:15
msgid ""
"This is because, in the current implementation, they may not be available"
" to reference in text above that particular directive."
msgstr ""

#: ../../syntax/syntax.md:714
msgid ""
"By default, a transition line (with a `footnotes` class) will be placed "
"before any footnotes. This can be turned off by adding "
"`myst_footnote_transition = False` to the config file."
msgstr ""

#: ../../syntax/syntax.md:718
msgid "Code blocks"
msgstr ""

#: ../../syntax/syntax.md:721
msgid "Show backticks inside raw markdown blocks"
msgstr ""

#: ../../syntax/syntax.md:723
msgid ""
"If you'd like to show backticks inside of your markdown, you can do so by"
" nesting them in backticks of a greater length. Markdown will treat the "
"outer-most backticks as the edges of the \"raw\" block and everything "
"inside will show up. For example:"
msgstr ""

#: ../../syntax/syntax.md:727
msgid "``` `` `hi` `` ```  will be rendered as: `` `hi` ``"
msgstr ""

#: ../../syntax/syntax.md:729
msgid "and"
msgstr ""

#: ../../syntax/syntax.md:739
msgid "will be rendered as:"
msgstr ""

#: ../../syntax/syntax.md:663
msgid "This is a manually-numbered footnote definition."
msgstr ""

#: ../../syntax/syntax.md:662
msgid "This is an auto-numbered footnote definition."
msgstr ""

#: ../../syntax/syntax.md:685
msgid "This is the _**footnote definition**_."
msgstr ""

#: ../../syntax/syntax.md:687
msgid "That continues for all indented lines"
msgstr ""

#: ../../syntax/syntax.md:689
msgid "even other block elements"
msgstr ""

#: ../../syntax/syntax.md:691
msgid ""
"Plus any preceding unindented lines, that are not separated by a blank "
"line"
msgstr ""

#: ../../syntax/syntax.md:13
msgid "A definition within a directive"
msgstr ""

#~ msgid ":::{seealso}"
#~ msgstr ""

#~ msgid ""
#~ "Check out the [MyST-Markdown VS "
#~ "Code "
#~ "extension](https://marketplace.visualstudio.com/items?itemName=ExecutableBookProject"
#~ ".myst-highlight), for MyST extended syntax"
#~ " highlighting. :::"
#~ msgstr ""

#~ msgid ":::{note} This text is **standard** _Markdown_ :::"
#~ msgstr ""

#~ msgid ""
#~ ":::{seealso} Top-matter is also used "
#~ "for the [substitution syntax "
#~ "extension](syntax/substitutions), and can be "
#~ "used to store information for blog "
#~ "posting (see [ablog's myst-parser "
#~ "support](https://ablog.readthedocs.io/manual/markdown/)). :::"
#~ msgstr ""

#~ msgid ":::{tabbed} Sphinx Configuration"
#~ msgstr ""

#~ msgid ":::"
#~ msgstr ""

#~ msgid ":::{tabbed} MyST Front-Matter"
#~ msgstr ""

#~ msgid ":::{tabbed} RestructuredText"
#~ msgstr ""

#~ msgid ":::{tabbed} HTML Output"
#~ msgstr ""

#~ msgid ":::{tip}"
#~ msgstr ""

#~ msgid ":::{note}"
#~ msgstr ""

