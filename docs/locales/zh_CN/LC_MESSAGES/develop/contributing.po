# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Executable Book Project
# This file is distributed under the same license as the MyST Parser
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MyST Parser 0.15.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-12-19 16:00+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../develop/contributing.md:1
msgid "Contributing"
msgstr ""

#: ../../develop/contributing.md:3
msgid ""
"[![Github-CI][github-ci]][github-link] [![Coverage Status][codecov-badge"
"]][codecov-link] [![Documentation Status][rtd-badge]][rtd-link] [![Code "
"style: black][black-badge]][black-link]"
msgstr ""

#: ../../develop/contributing.md:3
msgid "Github-CI"
msgstr ""

#: ../../develop/contributing.md:3
msgid "Coverage Status"
msgstr ""

#: ../../develop/contributing.md:3
msgid "Documentation Status"
msgstr ""

#: ../../develop/contributing.md:3
msgid "Code style: black"
msgstr ""

#: ../../develop/contributing.md:8
msgid ""
"We welcome all contributions! See the [EBP Contributing "
"Guide](https://executablebooks.org/en/latest/contributing.html) for "
"general details, and below for guidance specific to MyST-Parser."
msgstr ""

#: ../../develop/contributing.md:11
msgid "Install for development"
msgstr ""

#: ../../develop/contributing.md:13
msgid "To install `myst-parser` for development, take the following steps:"
msgstr ""

#: ../../develop/contributing.md:22
msgid "Code Style"
msgstr ""

#: ../../develop/contributing.md:24
msgid ""
"Code style is tested using [flake8](http://flake8.pycqa.org), with the "
"configuration set in `.flake8`, and code formatted with "
"[black](https://github.com/ambv/black)."
msgstr ""

#: ../../develop/contributing.md:28
msgid ""
"Installing with `myst-parser[code_style]` makes the [pre-commit](https"
"://pre-commit.com/) package available, which will ensure this style is "
"met before commits are submitted, by reformatting the code and testing "
"for lint errors. It can be setup by:"
msgstr ""

#: ../../develop/contributing.md:38
msgid "Optionally you can run `black` and `flake8` separately:"
msgstr ""

#: ../../develop/contributing.md:45
msgid ""
"Editors like VS Code also have automatic code reformat utilities, which "
"can adhere to this standard."
msgstr ""

#: ../../develop/contributing.md:47
msgid ""
"All functions and class methods should be annotated with types and "
"include a docstring. The prefered docstring format is outlined in `MyST-"
"Parser/docstring.fmt.mustache` and can be used automatically with the "
"[autodocstring](https://marketplace.visualstudio.com/items?itemName=njpwerner.autodocstring)"
" VS Code extension."
msgstr ""

#: ../../develop/contributing.md:50
msgid "Testing"
msgstr ""

#: ../../develop/contributing.md:52
msgid "For code tests, myst-parser uses [pytest](https://docs.pytest.org)):"
msgstr ""

#: ../../develop/contributing.md:59
msgid ""
"You can also use [tox](https://tox.readthedocs.io), to run the tests in "
"multiple isolated environments (see the `tox.ini` file for available test"
" environments):"
msgstr ""

#: ../../develop/contributing.md:66
msgid "For documentation build tests:"
msgstr ""

#: ../../develop/contributing.md:1
msgid "{ref}`develop/testing`"
msgstr ""

