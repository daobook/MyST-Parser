# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2020, Executable Book Project
# This file is distributed under the same license as the MyST Parser
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2021.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MyST Parser 0.15.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2021-11-17 08:52+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../syntax/optional.md:19
msgid "Optional MyST Syntaxes"
msgstr ""

#: ../../syntax/optional.md:21
msgid ""
"MyST-Parser is highly configurable, utilising the inherent "
"\"plugability\" of the [markdown-it-py](markdown_it:index) parser. The "
"following syntaxes are optional (disabled by default) and can be enabled "
"*via* the sphinx `conf.py` (see also [](sphinx/config-options)). Their "
"goal is generally to add more *Markdown friendly* syntaxes; often "
"enabling and rendering [markdown-it-py plugins](markdown_it:md/plugins) "
"that extend the [CommonMark specification](https://commonmark.org/)."
msgstr ""

#: ../../syntax/optional.md:25
msgid "To enable all the syntaxes explained below:"
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"`myst_enable_extensions` replaces previous configuration options: "
"`admonition_enable`, `figure_enable`, `dmath_enable`, `amsmath_enable`, "
"`deflist_enable`, `html_img_enable`"
msgstr ""

#: ../../syntax/optional.md:50
msgid "Typography"
msgstr ""

#: ../../syntax/optional.md:52
msgid ""
"Adding `\"smartquotes\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)) will automatically convert "
"standard quotations to their opening/closing variants:"
msgstr ""

#: ../../syntax/optional.md:54
msgid "`'single quotes'`: 'single quotes'"
msgstr ""

#: ../../syntax/optional.md:55
msgid "`\"double quotes\"`: \"double quotes\""
msgstr ""

#: ../../syntax/optional.md:57
msgid ""
"Adding `\"replacements\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)) will automatically convert "
"some common typographic texts"
msgstr ""

#: ../../syntax/optional.md:43
msgid "text"
msgstr ""

#: ../../syntax/optional.md:43
msgid "converted"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``(c)``, ``(C)``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "(c)"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``(tm)``, ``(TM)``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "(tm)"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``(r)``, ``(R)``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "(r)"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``(p)``, ``(P)``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "(p)"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``+-``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "+-"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``...``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "..."
msgstr ""

#: ../../syntax/optional.md:43
msgid "``?....``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "?...."
msgstr ""

#: ../../syntax/optional.md:43
msgid "``!....``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "!...."
msgstr ""

#: ../../syntax/optional.md:43
msgid "``????????``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "????????"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``!!!!!``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "!!!!!"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``,,,``"
msgstr ""

#: ../../syntax/optional.md:43
msgid ",,,"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``--``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "--"
msgstr ""

#: ../../syntax/optional.md:43
msgid "``---``"
msgstr ""

#: ../../syntax/optional.md:43
msgid "---"
msgstr ""

#: ../../syntax/optional.md:76 ../../syntax/syntax.md:4
msgid "Math shortcuts"
msgstr ""

#: ../../syntax/optional.md:78
msgid ""
"Math is parsed by adding to the `myst_enable_extensions` list option, in "
"the sphinx `conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html) one or both of:"
msgstr ""

#: ../../syntax/optional.md:80
msgid ""
"`\"dollarmath\"` (added by default) for parsing of dollar `$` and `$$` "
"encapsulated math."
msgstr ""

#: ../../syntax/optional.md:81
msgid ""
"`\"amsmath\"` (off by default) for direct parsing of [amsmath LaTeX "
"environments](https://ctan.org/pkg/amsmath)."
msgstr ""

#: ../../syntax/optional.md:83
msgid ""
"These options enable their respective Markdown parser plugins, as "
"detailed in the [markdown-it plugin guide](markdown_it:md/plugins)."
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"`myst_dmath_enable=True` and `myst_amsmath_enable=True` are deprecated, "
"and replaced by `myst_enable_extensions = [\"dollarmath\", \"amsmath\"]`"
msgstr ""

#: ../../syntax/optional.md:89
msgid "Dollar delimited math"
msgstr ""

#: ../../syntax/optional.md:91
msgid "Enabling dollar math will parse the following syntax:"
msgstr ""

#: ../../syntax/optional.md:93
msgid "Inline math: `$...$`"
msgstr ""

#: ../../syntax/optional.md:94
msgid "Display (block) math: `$$...$$`"
msgstr ""

#: ../../syntax/optional.md:96
msgid "Additionally if `myst_dmath_allow_labels=True` is set (the default):"
msgstr ""

#: ../../syntax/optional.md:98
msgid "Display (block) math with equation label: `$$...$$ (1)`"
msgstr ""

#: ../../syntax/optional.md:100
msgid ""
"For example, `$x_{hey}=it+is^{math}$` renders as $x_{hey}=it+is^{math}$. "
"This is equivalent to writing:"
msgstr ""

#: ../../syntax/optional.md:107
msgid "Escaping Dollars"
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"Math can be escaped (negated) by adding a `\\` before the first symbol, "
"e.g. `\\$a$` renders as \\$a\\$. Escaping can also be used inside math, "
"e.g. `$a=\\$3$` renders as $a=\\$3$."
msgstr ""

#: ../../syntax/optional.md:4
msgid ""
"Conversely `\\\\` will negate the escaping, so `\\\\$a$` renders as "
"\\\\$a$."
msgstr ""

#: ../../syntax/optional.md:116
msgid ""
"Block-level math can be specified with `$$` signs that wrap the math "
"block you'd like to parse. For example:"
msgstr ""

#: ../../syntax/optional.md:128
msgid "becomes"
msgstr ""

#: ../../syntax/optional.md:130
msgid ""
"\n"
"   \\begin{eqnarray}\n"
"      y    & = & ax^2 + bx + c \\\\\n"
"      f(x) & = & x^2 + 2xy + y^2\n"
"   \\end{eqnarray}\n"
msgstr ""

#: ../../syntax/optional.md:137
msgid "This is equivalent to the following directive:"
msgstr ""

#: ../../syntax/optional.md:148
msgid "You can also add labels to block equations:"
msgstr ""

#: ../../syntax/optional.md:158
msgid ""
"\n"
"e = mc^2\n"
msgstr ""

#: ../../syntax/optional.md:162
msgid "This is the best equation {eq}`eqn:best`"
msgstr ""

#: ../../syntax/optional.md:164
msgid "There are a few other options available to control dollar math parsing:"
msgstr ""

#: ../../syntax/optional.md:166
msgid ""
"`myst_dmath_allow_space=False`, will cause inline math to only be parsed "
"if there are no initial / final spaces, e.g. `$a$` but not `$ a$` or `$a "
"$`."
msgstr ""

#: ../../syntax/optional.md:168
msgid ""
"`myst_dmath_allow_digits=False`, will cause inline math to only be parsed"
" if there are no initial / final digits, e.g. `$a$` but not `1$a$` or "
"`$a$2`."
msgstr ""

#: ../../syntax/optional.md:170
msgid ""
"These options can both be useful if you also wish to use `$` as a unit of"
" currency."
msgstr ""

#: ../../syntax/optional.md:1
msgid "`myst_dmath_double_inline` option"
msgstr ""

#: ../../syntax/optional.md:176
msgid ""
"To allow display math (i.e. `$$`) within an inline context, set "
"`myst_dmath_double_inline = True` (`False` by default). This allows for "
"example:"
msgstr ""

#: ../../syntax/optional.md:187
msgid ""
"Hence, for $\\alpha \\in (0, 1)$, $$   \\mathbb P (\\alpha \\bar{X} \\ge "
"\\mu) \\le \\alpha; $$ i.e., $[\\alpha \\bar{X}, \\infty)$ is a lower "
"1-sided $1-\\alpha$ confidence bound for $\\mu$."
msgstr ""

#: ../../syntax/optional.md:187
msgid ""
"\n"
"  \\mathbb P (\\alpha \\bar{X} \\ge \\mu) \\le \\alpha;\n"
msgstr ""

#: ../../syntax/optional.md:193
msgid "Math in other block elements"
msgstr ""

#: ../../syntax/optional.md:195
msgid ""
"Math will also work when nested in other block elements, like lists or "
"quotes:"
msgstr ""

#: ../../syntax/optional.md:205 ../../syntax/optional.md:820
msgid "A list"
msgstr ""

#: ../../syntax/optional.md:206 ../../syntax/optional.md:208
msgid " a = 1 "
msgstr ""

#: ../../syntax/optional.md:208
msgid "A block quote $$ a = 1 $$"
msgstr ""

#: ../../syntax/optional.md:211 ../../syntax/optional.md:761
msgid "Direct LaTeX Math"
msgstr ""

#: ../../syntax/optional.md:213
msgid ""
"Want to use [amsmath](https://ctan.org/pkg/amsmath) LaTeX directly, with "
"no dollars? See [the extended syntax option](syntax/amsmath)."
msgstr ""

#: ../../syntax/optional.md:217
msgid "Mathjax and math parsing"
msgstr ""

#: ../../syntax/optional.md:219
msgid ""
"When building HTML using the [sphinx.ext.mathjax](https://www.sphinx-"
"doc.org/en/master/usage/extensions/math.html#module-sphinx.ext.mathjax) "
"extension (enabled by default), Myst-Parser injects the `tex2jax_ignore` "
"(MathJax v2) and  `mathjax_ignore` (MathJax v3) classes in to the top-"
"level section of each MyST document, and adds the following default "
"MathJax configuration:"
msgstr ""

#: ../../syntax/optional.md:222
msgid ""
"MathJax version 2 (see [the tex2jax "
"preprocessor](https://docs.mathjax.org/en/v2.7-latest/options/preprocessors/tex2jax.html"
"#configure-tex2jax):"
msgstr ""

#: ../../syntax/optional.md:228
msgid ""
"MathJax version 3 (see [the document "
"options](https://docs.mathjax.org/en/latest/options/document.html?highlight=ignoreHtmlClass"
"#the-configuration-block)):"
msgstr ""

#: ../../syntax/optional.md:234
msgid ""
"This ensurea that MathJax processes only math, identified by the "
"`dollarmath` and `amsmath` extensions, or specified in `math` directives."
msgstr ""

#: ../../syntax/optional.md:236
msgid ""
"To change this behaviour, set a custom regex, for identifying HTML "
"classes to process, like `myst_mathjax_classes=\"math|myclass\"`, or set "
"`myst_update_mathjax=False` to inhibit this override and process all HTML"
" elements."
msgstr ""

#: ../../syntax/optional.md:239
msgid "Linkify"
msgstr ""

#: ../../syntax/optional.md:241
msgid ""
"Adding `\"linkify\"` to `myst_enable_extensions` (in the sphinx `conf.py`"
" [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)) will automatically identify "
"\"bare\" web URLs and add hyperlinks:"
msgstr ""

#: ../../syntax/optional.md:243
msgid "`www.example.com` -> www.example.com"
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"This extension requires that [linkify-it-py](https://github.com/tsutsu3"
"/linkify-it-py) is installed. Either directly; `pip install linkify-it-"
"py` or *via* `pip install myst-parser[linkify]`."
msgstr ""

#: ../../syntax/optional.md:252
msgid "Substitutions (with Jinja2)"
msgstr ""

#: ../../syntax/optional.md:254
msgid ""
"Adding `\"substitution\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)) will allow you to add "
"substitutions, added in either the `conf.py` using `myst_substitutions`:"
msgstr ""

#: ../../syntax/optional.md:262
msgid ""
"or at the top of the file, in the front-matter section (see [this "
"section](syntax/frontmatter)):"
msgstr ""

#: ../../syntax/optional.md:1
msgid "Keys in the front-matter will override ones in the `conf.py`."
msgstr ""

#: ../../syntax/optional.md:285
msgid ""
"You can use these substitutions inline or as blocks, and you can even "
"nest substitutions in other substitutions (but circular references are "
"prohibited):"
msgstr ""

#: ../../syntax/optional.md
msgid "Markdown Input"
msgstr ""

#: ../../syntax/optional.md
msgid "Rendered Output"
msgstr ""

#: ../../syntax/optional.md:1
msgid "Inline: {{ key1 }}"
msgstr ""

#: ../../syntax/optional.md:3
msgid "Block level:"
msgstr ""

#: ../../syntax/optional.md:1
msgid "I'm a **substitution**"
msgstr ""

#: ../../syntax/optional.md ../../syntax/optional.md:551
#: ../../syntax/optional.md:604 ../../syntax/optional.md:620
#: ../../syntax/optional.md:641 ../../syntax/optional.md:677
#: ../../syntax/syntax.md:590
msgid "fishy"
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"Substitutions will only be assessed where you would normally use "
"Markdown, e.g. not in code blocks:"
msgstr ""

#: ../../syntax/optional.md:13
msgid ""
"One should also be wary of using unsuitable directives for inline "
"substitutions. This may lead to unexpected outcomes."
msgstr ""

#: ../../syntax/optional.md:336
msgid ""
"Substitution references are assessed as [Jinja2 "
"expressions](http://jinja.palletsprojects.com) which can use "
"[filters](https://jinja.palletsprojects.com/en/2.11.x/templates/#list-of-"
"builtin-filters), and also contains the [Sphinx Environment](https://www"
".sphinx-doc.org/en/master/extdev/envapi.html) in the context (as `env`). "
"Therefore you can do things like:"
msgstr ""

#: ../../syntax/optional.md:345
msgid "version: {{ env.config.version }}"
msgstr ""

#: ../../syntax/optional.md:346
msgid "docname: {{ env.docname | upper }}"
msgstr ""

#: ../../syntax/optional.md:1
msgid "ab"
msgstr ""

#: ../../syntax/optional.md:349
msgid ""
"You can also change the delimiter if necessary, for example setting in "
"the `conf.py`:"
msgstr ""

#: ../../syntax/optional.md:355
msgid ""
"Will parse: `|| \"a\" + \"b\" ||`. This should be changed with care "
"though, so as not to affect other syntaxes."
msgstr ""

#: ../../syntax/optional.md:358
msgid "The exact logic for handling substitutions is:"
msgstr ""

#: ../../syntax/optional.md:360
msgid ""
"Combine global substitutions (specified in `conf.py`) with front-matter "
"substitutions, to create a variable context (front-matter takes priority)"
msgstr ""

#: ../../syntax/optional.md:361
msgid "Add the sphinx `env` to the variable context"
msgstr ""

#: ../../syntax/optional.md:362
msgid ""
"Create the string content to render using Jinja2 (passing it the variable"
" context)"
msgstr ""

#: ../../syntax/optional.md:363
msgid ""
"If the substitution is inline and not a directive, render ignoring block "
"syntaxes (like lists or block-quotes), otherwise render with all syntax "
"rules."
msgstr ""

#: ../../syntax/optional.md:365
msgid "Substitutions and URLs"
msgstr ""

#: ../../syntax/optional.md:367
msgid ""
"Substitutions cannot be directly used in URLs, such as `[a "
"link](https://{{key4}}.com)` or `<https://{{key4}}.com>`. However, since "
"Jinja2 substitutions allow for Python methods to be used, you can use "
"string formatting or replacements:"
msgstr ""

#: ../../syntax/optional.md:1
msgid "[a link](https://example.com)"
msgstr ""

#: ../../syntax/optional.md:1
msgid "<https://myst-parser.readthedocs.io/en/latest/syntax/optional.html>"
msgstr ""

#: ../../syntax/optional.md:382
msgid "Code fences using colons"
msgstr ""

#: ../../syntax/optional.md:384
msgid ""
"By adding `\"colon_fence\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)), you can also use `:::` "
"delimiters to denote code fences, instead of ```` ``` ````."
msgstr ""

#: ../../syntax/optional.md:387
msgid ""
"Using colons instead of back-ticks has the benefit of allowing the "
"content to be rendered correctly, when you are working in any standard "
"Markdown editor. It is ideal for admonition type directives (as "
"documented in [Directives](syntax/directives)) or tables with titles, for"
" example:"
msgstr ""

#: ../../syntax/optional.md:1 ../../syntax/syntax.md:1
msgid "This text is **standard** _Markdown_"
msgstr ""

#: ../../syntax/optional.md:5
msgid "This is a **standard** _Markdown_ title"
msgstr ""

#: ../../syntax/optional.md:425
msgid "Similar to normal directives, these directives can also be nested:"
msgstr ""

#: ../../syntax/optional.md:441
msgid "and also parameter options can be used:"
msgstr ""

#: ../../syntax/optional.md:451
msgid "This *is* also **Markdown**"
msgstr ""

#: ../../syntax/optional.md:459
msgid "Admonition directives"
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"`myst_admonition_enable` is deprecated and replaced by "
"`myst_enable_extensions = [\"colon_fence\"]` (see above). Also, classes "
"should now be set with the `:class: myclass` option."
msgstr ""

#: ../../syntax/optional.md:4
msgid "Also see [](syntax/html-admonition)."
msgstr ""

#: ../../syntax/optional.md:470
msgid "Auto-generated header anchors"
msgstr ""

#: ../../syntax/optional.md:472
msgid ""
"A common, extended Markdown syntax is to use header bookmark links, "
"locally; `[](#header-anchor)`, or cross-file `[](path/to/file.md#header-"
"anchor)`. To achieve this, section headings must be assigned anchors, "
"which can be achieved in `myst-parser`, by setting `myst_heading_anchors "
"= 2` in your `conf.py`. This configures heading anchors to be assigned to"
" both `h1` and `h2` level headings. The anchor \"slugs\" created aim to "
"follow the [GitHub implementation](https://github.com/Flet/github-"
"slugger); lower-case text, removing punctuation, replacing spaces with "
"`-`, uniqueness *via* suffix enumeration `-1`. To change the slug "
"function, set `myst_heading_slug_func` in your `conf.py` to a function "
"that accepts a string and returns a string. You can inspect the links "
"that will be created using the command-line tool:"
msgstr ""

#: ../../syntax/optional.md:491
msgid ""
"For example `[](#auto-generated-header-anchors)`: [](#auto-generated-"
"header-anchors)."
msgstr ""

#: ../../syntax/optional.md:493
msgid ""
"The paths to other files should be relative to the current file, for "
"example `[**link text**](./syntax.md#the-myst-syntax-guide)`: [**link "
"text**](./syntax.md#the-myst-syntax-guide)."
msgstr ""

#: ../../syntax/optional.md:498
msgid "Definition Lists"
msgstr ""

#: ../../syntax/optional.md:500
msgid ""
"By adding `\"deflist\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)), you will be able to utilise"
" definition lists. Definition lists utilise the [markdown-it-py deflist "
"plugin](markdown_it:md/plugins), which itself is based on the [Pandoc "
"definition list "
"specification](http://johnmacfarlane.net/pandoc/README.html#definition-"
"lists)."
msgstr ""

#: ../../syntax/optional.md:504
msgid ""
"This syntax can be useful, for example, as an alternative to nested "
"bullet-lists:"
msgstr ""

#: ../../syntax/optional.md:506 ../../syntax/optional.md:521
msgid "Term 1"
msgstr ""

#: ../../syntax/optional.md:507 ../../syntax/optional.md:509
#: ../../syntax/optional.md:522 ../../syntax/optional.md:525
msgid "Definition"
msgstr ""

#: ../../syntax/optional.md:508 ../../syntax/optional.md:524
#: ../../syntax/optional.md:542
msgid "Term 2"
msgstr ""

#: ../../syntax/optional.md:511
msgid "Using instead:"
msgstr ""

#: ../../syntax/optional.md:527
msgid "From the Pandoc documentation:"
msgstr ""

#: ../../syntax/optional.md:529
msgid ""
"Each term must fit on one line, which may optionally be followed by a "
"blank line, and must be followed by one or more definitions. A definition"
" begins with a colon or tilde, which may be indented one or two spaces."
msgstr ""

#: ../../syntax/optional.md:532
msgid ""
"A term may have multiple definitions, and each definition may consist of "
"one or more block elements (paragraph, code block, list, etc.)"
msgstr ""

#: ../../syntax/optional.md:534
msgid "Here is a more complex example, demonstrating some of these features:"
msgstr ""

#: ../../syntax/optional.md:536
msgid "Term *with Markdown*"
msgstr ""

#: ../../syntax/optional.md:537
msgid "Definition [with reference](syntax/definition-lists)"
msgstr ""

#: ../../syntax/optional.md:539
msgid "A second paragraph"
msgstr ""

#: ../../syntax/optional.md:540
msgid "A second definition"
msgstr ""

#: ../../syntax/optional.md:543
msgid "Definition 2a"
msgstr ""

#: ../../syntax/optional.md:544
msgid "Definition 2b"
msgstr ""

#: ../../syntax/optional.md:546
msgid "Term 3"
msgstr ""

#: ../../syntax/optional.md:548
msgid "A quote"
msgstr ""

#: ../../syntax/optional.md:549
msgid "A final definition, that can even include images:"
msgstr ""

#: ../../syntax/optional.md:553
msgid "This was created from:"
msgstr ""

#: ../../syntax/optional.md:577
msgid "Task Lists"
msgstr ""

#: ../../syntax/optional.md:579
msgid ""
"By adding `\"tasklist\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)), you will be able to utilise"
" task lists. Task lists utilise the [markdown-it-py tasklists "
"plugin](markdown_it:md/plugins), and are applied to markdown list items "
"starting with `[ ]` or `[x]`:"
msgstr ""

#: ../../syntax/optional.md:589
msgid "An item that needs doing"
msgstr ""

#: ../../syntax/optional.md:590
msgid "An item that is complete"
msgstr ""

#: ../../syntax/optional.md:594 ../../syntax/syntax.md:580
msgid "Images"
msgstr ""

#: ../../syntax/optional.md:596
msgid ""
"MyST provides a few different syntaxes for including images in your "
"documentation, as explained below."
msgstr ""

#: ../../syntax/optional.md:598
msgid "The first is the standard Markdown syntax:"
msgstr ""

#: ../../syntax/optional.md:604 ../../syntax/syntax.md:590
msgid "![fishy](img/fun-fish.png)"
msgstr ""

#: ../../syntax/optional.md:606
msgid ""
"This will correctly copy the image to the build folder and will render it"
" in all output formats (HTML, TeX, etc). However, it is limited in the "
"configuration that can be applied, for example setting a width."
msgstr ""

#: ../../syntax/optional.md:609
msgid ""
"As discussed [above](syntax/directives), MyST allow for directives to be "
"used such as `image` and `figure` (see {ref}`the sphinx documentation "
"<sphinx:rst-primer>`):"
msgstr ""

#: ../../syntax/optional.md:626
msgid ""
"Additional options can now be set, however, in contrast to the Markdown "
"syntax, this syntax will not show the image in common Markdown viewers "
"(for example when the files are viewed on GitHub)."
msgstr ""

#: ../../syntax/optional.md:628
msgid ""
"The final option is directly using HTML, which is also parsed by MyST. "
"This is usually a bad option, because the HTML is treated as raw text "
"during the build process and so sphinx will not recognise that the image "
"file is to be copied, and will not output the HTML into non-HTML output "
"formats."
msgstr ""

#: ../../syntax/optional.md:631
msgid "HTML parsing to the rescue!"
msgstr ""

#: ../../syntax/optional.md:633
msgid ""
"By adding `\"html_image\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)), MySt-Parser will attempt to"
" convert any isolated `img` tags (i.e. not wrapped in any other HTML) to "
"the internal representation used in sphinx."
msgstr ""

#: ../../syntax/optional.md:644
msgid ""
"Allowed attributes are equivalent to the `image` directive: src, alt, "
"class, width, height and name. Any other attributes will be dropped."
msgstr ""

#: ../../syntax/optional.md:647
msgid "HTML image can also be used inline!"
msgstr ""

#: ../../syntax/optional.md:649
msgid "I'm an inline image: <img src=\"img/fun-fish.png\" height=\"20px\">"
msgstr ""

#: ../../syntax/optional.md:653
msgid "Markdown Figures"
msgstr ""

#: ../../syntax/optional.md:655
msgid ""
"By adding `\"colon_fence\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)), we can combine the above "
"two extended syntaxes, to create a fully Markdown compliant version of "
"the `figure` directive named `figure-md`."
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"`myst_figure_enable` with the `figure` directive is deprecated and "
"replaced by `myst_enable_extensions = [\"colon_fence\"]` and `figure-md`."
msgstr ""

#: ../../syntax/optional.md:663
msgid ""
"The figure block must contain **only** two components; an image, in "
"either Markdown or HTML syntax, and a single paragraph for the caption."
msgstr ""

#: ../../syntax/optional.md:665
msgid "The title is optional and taken as the reference target of the figure:"
msgstr ""

#: ../../syntax/optional.md:3
msgid "This is a caption in **Markdown**"
msgstr ""

#: ../../syntax/optional.md:685
msgid "As we see here, the target we set can be referenced:"
msgstr ""

#: ../../syntax/optional.md:691
msgid "[Go to the fish!](fig-target)"
msgstr ""

#: ../../syntax/optional.md:695
msgid "HTML Admonitions"
msgstr ""

#: ../../syntax/optional.md:697
msgid ""
"By adding `\"html_admonition\"` to `myst_enable_extensions` (in the "
"sphinx `conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)), you can enable parsing of "
"`<div class=\"admonition\">` HTML blocks. These blocks will be converted "
"internally to Sphinx admonition directives, and so will work correctly "
"for all output formats. This is helpful when you care about viewing the "
"\"source\" Markdown, such as in Jupyter Notebooks."
msgstr ""

#: ../../syntax/optional.md:702
msgid ""
"If the first element within the `div` is `<div class=\"title\">` or `<p "
"class=\"title\">`, then this will be set as the admonition title. All "
"internal text (and the title) will be parsed as MyST-Markdown and all "
"classes and an optional name will be passed to the admonition:"
msgstr ""

#: ../../syntax/optional.md:712
msgid "This is the **title**"
msgstr ""

#: ../../syntax/optional.md:1
msgid "This is the *content*"
msgstr ""

#: ../../syntax/optional.md:717
msgid ""
"During the Sphinx render, both the `class` and `name` attributes will be "
"used by Sphinx, but any other attributes like `style` will be discarded."
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"There can be no empty lines in the block, otherwise they will be read as "
"two separate blocks. If you want to use multiple paragraphs then they can"
" be enclosed in `<p>`:"
msgstr ""

#: ../../syntax/optional.md:11 ../../syntax/optional.md:750
msgid "Note"
msgstr ""

#: ../../syntax/optional.md:1
msgid "Paragraph 1"
msgstr ""

#: ../../syntax/optional.md:3
msgid "Paragraph 2"
msgstr ""

#: ../../syntax/optional.md:737
msgid "You can also nest HTML admonitions:"
msgstr ""

#: ../../syntax/optional.md:1
msgid "Some **content**"
msgstr ""

#: ../../syntax/optional.md:3
msgid "A *title*"
msgstr ""

#: ../../syntax/optional.md:763
msgid ""
"By adding `\"amsmath\"` to `myst_enable_extensions` (in the sphinx "
"`conf.py` [configuration file](https://www.sphinx-"
"doc.org/en/master/usage/configuration.html)), you can enable direct "
"parsing of [amsmath](https://ctan.org/pkg/amsmath) LaTeX equations. These"
" top-level math environments will then be directly parsed:"
msgstr ""

#: ../../syntax/optional.md:767
msgid ""
"equation, multline, gather, align, alignat, flalign, matrix, pmatrix, "
"bmatrix, Bmatrix, vmatrix, Vmatrix, eqnarray."
msgstr ""

#: ../../syntax/optional.md:769
msgid "As expected, environments ending in `*` will not be numbered, for example:"
msgstr ""

#: ../../syntax/optional.md:785
msgid ""
"\\begin{gather*}\n"
"a_1=b_1+c_1\\\\\n"
"a_2=b_2+c_2-d_2+e_2\n"
"\\end{gather*}"
msgstr ""

#: ../../syntax/optional.md:790
msgid ""
"\\begin{align}\n"
"a_{11}& =b_{11}&\n"
"  a_{12}& =b_{12}\\\\\n"
"a_{21}& =b_{21}&\n"
"  a_{22}& =b_{22}+c_{22}\n"
"\\end{align}"
msgstr ""

#: ../../syntax/optional.md:1
msgid ""
"`\\labels` inside the environment are not currently identified, and so "
"cannot be referenced. We hope to implement this in a future update (see "
"[executablebooks/MyST-Parser#202](https://github.com/executablebooks"
"/MyST-Parser/issues/202))!"
msgstr ""

#: ../../syntax/optional.md:1
msgid "See also [how Mathjax is configured with MyST-Parser](syntax/mathjax)."
msgstr ""

#: ../../syntax/optional.md:806
msgid ""
"This syntax will also work when nested in other block elements, like "
"lists or quotes:"
msgstr ""

#: ../../syntax/optional.md:821 ../../syntax/optional.md:826
msgid ""
"\\begin{gather*}\n"
"  a_1=b_1+c_1\\\\a_2=b_2+c_2-d_2+e_2\n"
"  \\end{gather*}"
msgstr ""

#: ../../syntax/optional.md:825
msgid "A block quote"
msgstr ""

#: ../../syntax/reference.md:1
msgid "MyST Syntax Reference"
msgstr ""

#: ../../syntax/reference.md:3
msgid ""
"This page serves as a reference for the syntax that makes of MyST "
"Markdown."
msgstr ""

#: ../../syntax/reference.md:1
msgid ""
"For more description and explanation of MyST syntax, see the [syntax "
"guide](syntax.md)."
msgstr ""

#: ../../syntax/reference.md:9
msgid "Block (Multi-line) Tokens"
msgstr ""

#: ../../syntax/reference.md:11
msgid ""
"Block tokens span multiple lines of content. They are broken down into "
"two sections:"
msgstr ""

#: ../../syntax/reference.md:13
msgid ""
"{ref}`extended-block-tokens` contains *extra* tokens that are not in "
"CommonMark."
msgstr ""

#: ../../syntax/reference.md:14
msgid ""
"{ref}`commonmark-block-tokens` contains CommonMark tokens that also work,"
" for reference."
msgstr ""

#: ../../syntax/reference.md:16
msgid ""
"In addition to these summaries of block-level syntax, see {ref}`extra-"
"markdown-syntax`."
msgstr ""

#: ../../syntax/reference.md:1
msgid ""
"Because MyST markdown was inspired by functionality that exists in "
"reStructuredText, we have shown equivalent rST syntax for many MyST "
"markdown features below."
msgstr ""

#: ../../syntax/reference.md:24
msgid "Extended block tokens"
msgstr ""

#: ../../syntax/reference.md:1
msgid "Token"
msgstr ""

#: ../../syntax/reference.md:2
msgid "Description"
msgstr ""

#: ../../syntax/reference.md:3
msgid "Example"
msgstr ""

#: ../../syntax/reference.md:4
msgid "FrontMatter"
msgstr ""

#: ../../syntax/reference.md:5
msgid "A YAML block at the start of the document enclosed by `---`"
msgstr ""

#: ../../syntax/reference.md:11
msgid "Directives"
msgstr ""

#: ../../syntax/reference.md:12
msgid ""
"enclosed in 3 or more backticks followed by the directive name wrapped in"
" curly brackets `{}`. See {ref}`syntax/directives` for more details."
msgstr ""

#: ../../syntax/reference.md:16 ../../syntax/reference.md:21
msgid "Math"
msgstr ""

#: ../../syntax/reference.md:22
msgid ""
"`$$` (default) or `\\[`...`\\]` characters wrapping multi-line math, or "
"even direct [amsmath](https://ctan.org/pkg/amsmath) LaTeX equations "
"(optional). See {ref}`syntax/math` for more information."
msgstr ""

#: ../../syntax/reference.md:29
msgid "Table"
msgstr ""

#: ../../syntax/reference.md:30
msgid "Standard markdown table style, with pipe separation."
msgstr ""

#: ../../syntax/reference.md:36
msgid "LineComment"
msgstr ""

#: ../../syntax/reference.md:37
msgid "A commented line. See {ref}`syntax/comments` for more information."
msgstr ""

#: ../../syntax/reference.md:41
msgid "BlockBreak"
msgstr ""

#: ../../syntax/reference.md:42
msgid "Define blocks of text. See {ref}`syntax/blockbreaks` for more information."
msgstr ""

#: ../../syntax/reference.md:46
msgid "Footnote"
msgstr ""

#: ../../syntax/reference.md:47
msgid ""
"A definition for a referencing footnote, that is placed at the bottom of "
"the document. See {ref}`syntax/footnotes` for more details."
msgstr ""

#: ../../syntax/reference.md:52
msgid "Admonitions (optional)"
msgstr ""

#: ../../syntax/reference.md:53
msgid ""
"An alternative approach for admonition style directives only, which has "
"the benefit of allowing the content to be rendered in standard markdown "
"editors. See [admonition directives](syntax/admonitions) for more "
"details."
msgstr ""

#: ../../syntax/reference.md:92
msgid "CommonMark tokens"
msgstr ""

#: ../../syntax/reference.md:4
msgid "HTMLBlock"
msgstr ""

#: ../../syntax/reference.md:5
msgid "Any valid HTML (rendered in HTML output only)"
msgstr ""

#: ../../syntax/reference.md:9
msgid "BlockCode"
msgstr ""

#: ../../syntax/reference.md:10
msgid "indented text (4 spaces or a tab)"
msgstr ""

#: ../../syntax/reference.md:14
msgid "Heading"
msgstr ""

#: ../../syntax/reference.md:15
msgid "Level 1-6 headings, denoted by number of `#`"
msgstr ""

#: ../../syntax/reference.md:19
msgid "SetextHeading"
msgstr ""

#: ../../syntax/reference.md:20
msgid "Underlined header (using multiple `=` or `-`)"
msgstr ""

#: ../../syntax/reference.md:25
msgid "Quote"
msgstr ""

#: ../../syntax/reference.md:26
msgid "quoted text"
msgstr ""

#: ../../syntax/reference.md:30
msgid "CodeFence"
msgstr ""

#: ../../syntax/reference.md:31
msgid "enclosed in 3 or more backticks with an optional language name"
msgstr ""

#: ../../syntax/reference.md:37
msgid "ThematicBreak"
msgstr ""

#: ../../syntax/reference.md:38
msgid "Creates a horizontal line in the output"
msgstr ""

#: ../../syntax/reference.md:42
msgid "List"
msgstr ""

#: ../../syntax/reference.md:43
msgid "bullet points or enumerated."
msgstr ""

#: ../../syntax/reference.md:49
msgid "LinkDefinition"
msgstr ""

#: ../../syntax/reference.md:50
msgid ""
"A substitution for an inline link, which can have a reference target (no "
"spaces), and an optional title (in `\"`)"
msgstr ""

#: ../../syntax/reference.md:54
msgid "Paragraph"
msgstr ""

#: ../../syntax/reference.md:55
msgid "General inline text"
msgstr ""

#: ../../syntax/reference.md:158
msgid "Span (Inline) Tokens"
msgstr ""

#: ../../syntax/reference.md:160
msgid ""
"Span (or inline) tokens are defined on a single line of content. They are"
" broken down into two sections below:"
msgstr ""

#: ../../syntax/reference.md:163
msgid ""
"{ref}`extended-span-tokens` contains *extra* tokens that are not in "
"CommonMark."
msgstr ""

#: ../../syntax/reference.md:164
msgid ""
"{ref}`commonmark-span-tokens` contains CommonMark tokens that also work, "
"for reference."
msgstr ""

#: ../../syntax/reference.md:166
msgid ""
"In addition to these summaries of inline syntax, see {ref}`extra-"
"markdown-syntax`."
msgstr ""

#: ../../syntax/reference.md:169
msgid "Extended inline tokens"
msgstr ""

#: ../../syntax/reference.md:4
msgid "Role"
msgstr ""

#: ../../syntax/reference.md:5
msgid "See {ref}`syntax/roles` for more information."
msgstr ""

#: ../../syntax/reference.md:10
msgid "Target"
msgstr ""

#: ../../syntax/reference.md:11
msgid ""
"Precedes element to target, e.g. header. See {ref}`syntax/targets` for "
"more information."
msgstr ""

#: ../../syntax/reference.md:17
msgid ""
"`$` (default) or `\\(`...`\\)` enclosed math. See {ref}`syntax/math` for "
"more information."
msgstr ""

#: ../../syntax/reference.md:22
msgid "FootReference"
msgstr ""

#: ../../syntax/reference.md:23
msgid "Reference a footnote. See {ref}`syntax/footnotes` for more details."
msgstr ""

#: ../../syntax/reference.md:204
msgid "CommonMark inline tokens"
msgstr ""

#: ../../syntax/reference.md:4
msgid "HTMLSpan"
msgstr ""

#: ../../syntax/reference.md:9
msgid "EscapeSequence"
msgstr ""

#: ../../syntax/reference.md:10
msgid "Escaped symbols (to avoid them being interpreted as other syntax elements)"
msgstr ""

#: ../../syntax/reference.md:14
msgid "AutoLink"
msgstr ""

#: ../../syntax/reference.md:15
msgid "Link that is shown in final output"
msgstr ""

#: ../../syntax/reference.md:19
msgid "InlineCode"
msgstr ""

#: ../../syntax/reference.md:20
msgid "Literal text"
msgstr ""

#: ../../syntax/reference.md:24
msgid "LineBreak"
msgstr ""

#: ../../syntax/reference.md:25
msgid "Soft or hard (ends with spaces or backslash)"
msgstr ""

#: ../../syntax/reference.md:29
msgid "Image"
msgstr ""

#: ../../syntax/reference.md:30
msgid ""
"Link to an image. You can also use HTML syntax, to include image size "
"etc, [see here](syntax/images) for details"
msgstr ""

#: ../../syntax/reference.md:35
msgid "Link"
msgstr ""

#: ../../syntax/reference.md:36
msgid "Reference `LinkDefinitions`"
msgstr ""

#: ../../syntax/reference.md:40
msgid "Strong"
msgstr ""

#: ../../syntax/reference.md:41
msgid "Bold text"
msgstr ""

#: ../../syntax/reference.md:45
msgid "Emphasis"
msgstr ""

#: ../../syntax/reference.md:46
msgid "Italic text"
msgstr ""

#: ../../syntax/reference.md:50
msgid "RawText"
msgstr ""

#: ../../syntax/reference.md:51
msgid "Any text"
msgstr ""

#: ../../syntax/syntax.md:3
msgid "The MyST Syntax Guide"
msgstr ""

#: ../../syntax/syntax.md:5
msgid "{sub-ref}`today` | {sub-ref}`wordcount-minutes` min read"
msgstr ""

#: ../../syntax/syntax.md:7
msgid ""
"As a base, MyST adheres to the [CommonMark "
"specification](https://spec.commonmark.org/). For this, it uses the "
"[markdown-it-py](https://github.com/executablebooks/markdown-it-py) "
"parser, which is a well-structured markdown parser for Python that is "
"CommonMark-compliant and also extensible."
msgstr ""

#: ../../syntax/syntax.md:12
msgid ""
"MyST adds several new syntax options to CommonMark in order to be used "
"with Sphinx, the documentation generation engine used extensively in the "
"Python ecosystem."
msgstr ""

#: ../../syntax/syntax.md:16
msgid ""
"Below is a summary of the syntax 'tokens' parsed, and further details of "
"a few major extensions from the CommonMark flavor of markdown."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"For an introduction to writing Directives and Roles with MyST markdown, "
"see {ref}`intro/writing`."
msgstr ""

#: ../../syntax/syntax.md:2
msgid ""
"Check out the [MyST-Markdown VS Code "
"extension](https://marketplace.visualstudio.com/items?itemName=ExecutableBookProject"
".myst-highlight), for MyST extended syntax highlighting."
msgstr ""

#: ../../syntax/syntax.md:24
msgid ""
"MyST builds on the tokens defined by markdown-it, to extend the syntax "
"described in the [CommonMark Spec](https://spec.commonmark.org/0.29/), "
"which the parser is tested against."
msgstr ""

#: ../../syntax/syntax.md:31
msgid "Directives - a block-level extension point"
msgstr ""

#: ../../syntax/syntax.md:33
msgid ""
"Directives syntax is defined with triple-backticks and curly-brackets. It"
" is effectively a code block with curly brackets around the language, and"
" a directive name in place of a language name. It is similar to how "
"RMarkdown defines \"runnable cells\". Here is the basic structure:"
msgstr ""

#: ../../syntax/syntax.md:1 ../../syntax/syntax.md:2
msgid "MyST"
msgstr ""

#: ../../syntax/syntax.md:2 ../../syntax/syntax.md:3
msgid "reStructuredText"
msgstr ""

#: ../../syntax/syntax.md:64 ../../syntax/syntax.md:304
msgid "For example, the following code:"
msgstr ""

#: ../../syntax/syntax.md:72
msgid "Will generate this admonition:"
msgstr ""

#: ../../syntax/syntax.md:74
msgid "This is my admonition"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "This is my note"
msgstr ""

#: ../../syntax/syntax.md:78
msgid "Parameterizing directives"
msgstr ""

#: ../../syntax/syntax.md:80
msgid ""
"For directives that take parameters as input, there are two ways to "
"parameterize them. In each case, the options themselves are given as "
"`key: value` pairs. An example of each is shown below:"
msgstr ""

#: ../../syntax/syntax.md:84
msgid ""
"**Using YAML frontmatter**. A block of YAML front-matter just after the "
"first line of the directive will be parsed as options for the directive. "
"This needs to be surrounded by `---` lines. Everything in between will be"
" parsed by YAML and passed as keyword arguments to your directive. For "
"example:"
msgstr ""

#: ../../syntax/syntax.md:104
msgid "This is my multi-line caption. It is *pretty nifty* ;-)"
msgstr ""

#: ../../syntax/syntax.md:117
msgid ""
"**Short-hand options with `:` characters**. If you only need one or two "
"options for your directive and wish to save lines, you may also specify "
"directive options as a collection of lines just after the first line of "
"the directive, each preceding with `:`. Then the leading `:` is removed "
"from each line, and the rest is parsed as YAML."
msgstr ""

#: ../../syntax/syntax.md:122
msgid "For example:"
msgstr ""

#: ../../syntax/syntax.md:136
msgid "How directives parse content"
msgstr ""

#: ../../syntax/syntax.md:138
msgid ""
"Some directives parse the content that is in their content block. MyST "
"parses this content **as Markdown**."
msgstr ""

#: ../../syntax/syntax.md:141
msgid ""
"This means that MyST markdown can be written in the content areas of any "
"directives written in MyST markdown. For example:"
msgstr ""

#: ../../syntax/syntax.md:149
msgid "My markdown link"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "Here is [markdown link syntax](https://jupyter.org)"
msgstr ""

#: ../../syntax/syntax.md:153
msgid ""
"As a short-hand for directives that require no arguments, and when no "
"parameter options are used (see below), you may start the content "
"directly after the directive name."
msgstr ""

#: ../../syntax/syntax.md:1
msgid "Notes require **no** arguments, so content can start here."
msgstr ""

#: ../../syntax/syntax.md:164
msgid ""
"For special cases, MySt also offers the `eval-rst` directive. This will "
"parse the content **as ReStructuredText**:"
msgstr ""

#: ../../syntax/syntax.md:186
msgid "Party time!"
msgstr ""

#: ../../syntax/syntax.md:188
msgid "A reference from inside: :ref:`rst-fun-fish`"
msgstr ""

#: ../../syntax/syntax.md:190
msgid "A reference from outside: :ref:`syntax/directives/parsing`"
msgstr ""

#: ../../syntax/syntax.md:193
msgid ""
"Note how the text is integrated into the rest of the document, so we can "
"also reference [party fish](rst-fun-fish) anywhere else in the "
"documentation."
msgstr ""

#: ../../syntax/syntax.md:195
msgid "Nesting directives"
msgstr ""

#: ../../syntax/syntax.md:197
msgid ""
"You can nest directives by ensuring that the tick-lines corresponding to "
"the outermost directive are longer than the tick-lines for the inner "
"directives. For example, nest a warning inside a note block like so:"
msgstr ""

#: ../../syntax/syntax.md:210
msgid "Here's how it looks rendered:"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "The next info should be nested"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "Here's my warning"
msgstr ""

#: ../../syntax/syntax.md:219
msgid ""
"You can indent inner-code fences, so long as they aren't indented by more"
" than 3 spaces. Otherwise, they will be rendered as \"raw code\" blocks:"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "The warning block will be properly-parsed"
msgstr ""

#: ../../syntax/syntax.md:7
msgid "But the next block will be parsed as raw text"
msgstr ""

#: ../../syntax/syntax.md:252
msgid "This can really be abused if you'd like ;-)"
msgstr ""

#: ../../syntax/syntax.md:2
msgid "Yep another admonition"
msgstr ""

#: ../../syntax/syntax.md:267
msgid "Markdown-friendly directives"
msgstr ""

#: ../../syntax/syntax.md:269
msgid ""
"Want to use syntax that renders correctly in standard Markdown editors? "
"See [the extended syntax option](syntax/colon_fence)."
msgstr ""

#: ../../syntax/syntax.md:284
msgid "Roles - an in-line extension point"
msgstr ""

#: ../../syntax/syntax.md:286
msgid ""
"Roles are similar to directives - they allow you to define arbitrary new "
"functionality, but they are used *in-line*. To define an in-line role, "
"use the following form:"
msgstr ""

#: ../../syntax/syntax.md:310 ../../syntax/syntax.md:328
msgid "Becomes:"
msgstr ""

#: ../../syntax/syntax.md:312
msgid "Since Pythagoras, we know that {math}`a^2 + b^2 = c^2`"
msgstr ""

#: ../../syntax/syntax.md:314
msgid ""
"You can use roles to do things like reference equations and other items "
"in your book. For example:"
msgstr ""

#: ../../syntax/syntax.md:330
msgid ""
"e^{i\\pi} + 1 = 0\n"
"\n"
msgstr ""

#: ../../syntax/syntax.md:336
msgid ""
"Euler's identity, equation {math:numref}`euler`, was elected one of the "
"most beautiful mathematical formulas."
msgstr ""

#: ../../syntax/syntax.md:339
msgid "How roles parse content"
msgstr ""

#: ../../syntax/syntax.md:341
msgid ""
"The content of roles is parsed differently depending on the role that "
"you've used. Some roles expect inputs that will be used to change "
"functionality. For example, the `ref` role will assume that input content"
" is a reference to some other part of the site. However, other roles may "
"use the MyST parser to parse the input as content."
msgstr ""

#: ../../syntax/syntax.md:346
msgid ""
"Some roles also **extend their functionality** depending on the content "
"that you pass. For example, following the `ref` example above, if you "
"pass a string like this: `Content to display <myref>`, then the `ref` "
"will display `Content to display` and use `myref` as the reference to "
"look up."
msgstr ""

#: ../../syntax/syntax.md:351
msgid "How roles parse this content depends on the author that created the role."
msgstr ""

#: ../../syntax/syntax.md:356
msgid "Extra markdown syntax"
msgstr ""

#: ../../syntax/syntax.md:358
msgid ""
"In addition to roles and directives, MyST supports extra markdown syntax "
"that doesn't exist in CommonMark. In most cases, these are syntactic "
"short-cuts to calling roles and directives. We'll cover some common ones "
"below."
msgstr ""

#: ../../syntax/syntax.md:362
msgid "This table describes the rST and MyST equivalents:"
msgstr ""

#: ../../syntax/syntax.md:1
msgid "Type"
msgstr ""

#: ../../syntax/syntax.md:5
msgid "`$x^2$`"
msgstr ""

#: ../../syntax/syntax.md:6
msgid "N/A"
msgstr ""

#: ../../syntax/syntax.md:7
msgid "Front matter"
msgstr ""

#: ../../syntax/syntax.md:16 ../../syntax/syntax.md:470
msgid "Comments"
msgstr ""

#: ../../syntax/syntax.md:17
#, python-format
msgid "`% comment`"
msgstr ""

#: ../../syntax/syntax.md:18
msgid "`.. comment`"
msgstr ""

#: ../../syntax/syntax.md:19
msgid "Targets"
msgstr ""

#: ../../syntax/syntax.md:20
msgid "`(mytarget)=`"
msgstr ""

#: ../../syntax/syntax.md:21
msgid "`.. _mytarget:`"
msgstr ""

#: ../../syntax/syntax.md:393
msgid "Front Matter"
msgstr ""

#: ../../syntax/syntax.md:395
msgid ""
"This is a YAML block at the start of the document, as used for example in"
" [jekyll](https://jekyllrb.com/docs/front-matter/)."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"Top-matter is also used for the [substitution syntax "
"extension](syntax/substitutions), and can be used to store information "
"for blog posting (see [ablog's myst-parser "
"support](https://ablog.readthedocs.io/manual/markdown/))."
msgstr ""

#: ../../syntax/syntax.md:406
msgid "Setting HTML Metadata"
msgstr ""

#: ../../syntax/syntax.md:408
msgid ""
"The front-matter can contain the special key `html_meta`; a dict with "
"data to add to the generated HTML as [`<meta>` "
"elements](https://developer.mozilla.org/en-"
"US/docs/Web/HTML/Element/meta). This is equivalent to using the [RST "
"`meta` directive](https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/basics.html#html-metadata)."
msgstr ""

#: ../../syntax/syntax.md:411
msgid ""
"HTML metadata can also be added globally in the `conf.py` *via* the "
"`myst_html_meta` variable, in which case it will be added to all MyST "
"documents. For each document, the `myst_html_meta` dict will be updated "
"by the document level front-matter `html_meta`, with the front-matter "
"taking precedence."
msgstr ""

#: ../../syntax/syntax.md
msgid "Sphinx Configuration"
msgstr ""

#: ../../syntax/syntax.md
msgid "MyST Front-Matter"
msgstr ""

#: ../../syntax/syntax.md
msgid "RestructuredText"
msgstr ""

#: ../../syntax/syntax.md
msgid "HTML Output"
msgstr ""

#: ../../syntax/syntax.md:472
msgid ""
"You may add comments by putting the `%` character at the beginning of a "
"line. This will prevent the line from being parsed into the output "
"document."
msgstr ""

#: ../../syntax/syntax.md:475 ../../syntax/syntax.md:511
msgid "For example, this code:"
msgstr ""

#: ../../syntax/syntax.md:481 ../../syntax/syntax.md:517
msgid "Is below, but it won't be parsed into the document."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"Since comments are a block-level entity, they will terminate the previous"
" block. In practical terms, this means that the following lines will be "
"broken up into two paragraphs, resulting in a new line between them:"
msgstr ""

#: ../../syntax/syntax.md:11
msgid "a line"
msgstr ""

#: ../../syntax/syntax.md:13
msgid "another line"
msgstr ""

#: ../../syntax/syntax.md:503
msgid "Block Breaks"
msgstr ""

#: ../../syntax/syntax.md:505
msgid ""
"You may add a block break by putting `+++` at the beginning of a line. "
"This constuct's intended use case is for mapping to cell based document "
"formats, like [jupyter notebooks](https://jupyter.org/), to indicate a "
"new text cell. It will not show up in the rendered text, but is stored in"
" the internal document structure for use by developers."
msgstr ""

#: ../../syntax/syntax.md:523
msgid "Targets and Cross-Referencing"
msgstr ""

#: ../../syntax/syntax.md:525
msgid ""
"Targets are used to define custom anchors that you can refer to elsewhere"
" in your documentation. They generally go before section titles so that "
"you can easily refer to them."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"If you'd like to *automatically* generate targets for each of your "
"section headers, check out the [](syntax/header-anchors) section of "
"extended syntaxes."
msgstr ""

#: ../../syntax/syntax.md:536
msgid "Target headers are defined with this syntax:"
msgstr ""

#: ../../syntax/syntax.md:542
msgid ""
"They can then be referred to with the [ref inline role](https://www"
".sphinx-doc.org/en/master/usage/restructuredtext/roles.html#role-ref):"
msgstr ""

#: ../../syntax/syntax.md:548
msgid ""
"By default, the reference will use the text of the target (such as the "
"section title), but also you can directly specify the text:"
msgstr ""

#: ../../syntax/syntax.md:554
msgid ""
"For example, see this ref: {ref}`syntax/targets`, and here's a ref back "
"to the top of this page: {ref}`my text <example_syntax>`."
msgstr ""

#: ../../syntax/syntax.md:557
msgid "Alternatively using the markdown syntax:"
msgstr ""

#: ../../syntax/syntax.md:563
msgid ""
"is equivalent to using the [any inline role](https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/roles.html#role-any):"
msgstr ""

#: ../../syntax/syntax.md:569
msgid ""
"but can also accept \"nested\" syntax (like bold text) and will recognise"
" document paths that include extensions (e.g. `syntax/syntax` or "
"`syntax/syntax.md`)"
msgstr ""

#: ../../syntax/syntax.md:571
msgid ""
"Using the same example, see this ref: [](syntax/targets), here is a "
"reference back to the top of this page: [my text with **nested** "
"$\\alpha$ syntax](example_syntax), and here is a reference to another "
"page (`[](../sphinx/intro.md)`): [](../sphinx/intro.md)."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"If you wish to have the target's title inserted into your text, you can "
"leave the \"text\" section of the markdown link empty. For example, this "
"markdown: `[](syntax.md)` will result in: [](syntax.md)."
msgstr ""

#: ../../syntax/syntax.md:582
msgid ""
"MyST provides a few different syntaxes for including images in your "
"documentation."
msgstr ""

#: ../../syntax/syntax.md:584
msgid "The standard Markdown syntax is:"
msgstr ""

#: ../../syntax/syntax.md:592
msgid ""
"But you can also enable extended image syntaxes, to control attributes "
"like width and captions. See the [extended image syntax "
"guide](syntax/images)."
msgstr ""

#: ../../syntax/syntax.md:596
msgid "Footnotes"
msgstr ""

#: ../../syntax/syntax.md:598
msgid ""
"Footnotes use the [pandoc "
"specification](https://pandoc.org/MANUAL.html#footnotes). Their labels "
"**start with `^`** and can then be any alpha-numeric string (no spaces), "
"which is case-insensitive."
msgstr ""

#: ../../syntax/syntax.md:601
msgid ""
"If the label is an integer, then it will always use that integer for the "
"rendered label (i.e. they are manually numbered)."
msgstr ""

#: ../../syntax/syntax.md:602
msgid ""
"For any other labels, they will be auto-numbered in the order which they "
"are referenced, skipping any manually numbered labels."
msgstr ""

#: ../../syntax/syntax.md:604
msgid ""
"All footnote definitions are collected, and displayed at the bottom of "
"the page (in the order they are referenced). Note that un-referenced "
"footnote definitions will not be displayed."
msgstr ""

#: ../../syntax/syntax.md:615
msgid "This is a manually-numbered footnote reference.[^3]"
msgstr ""

#: ../../syntax/syntax.md:616
msgid "This is an auto-numbered footnote reference.[^myref]"
msgstr ""

#: ../../syntax/syntax.md:621
msgid ""
"Any preceding text after a footnote definitions, which is indented by "
"four or more spaces, will also be included in the footnote definition, "
"and the text is rendered as MyST Markdown, e.g."
msgstr ""

#: ../../syntax/syntax.md:639
msgid "A longer footnote definition.[^mylongdef]"
msgstr ""

#: ../../syntax/syntax.md:650
msgid "This is not part of the footnote."
msgstr ""

#: ../../syntax/syntax.md:1
msgid ""
"Although footnote references can be used just fine within directives, "
"e.g.[^myref], it it recommended that footnote definitions are not set "
"within directives, unless they will only be referenced within that same "
"directive:"
msgstr ""

#: ../../syntax/syntax.md:11
msgid "[^other]"
msgstr ""

#: ../../syntax/syntax.md:15
msgid ""
"This is because, in the current implementation, they may not be available"
" to reference in text above that particular directive."
msgstr ""

#: ../../syntax/syntax.md:670
msgid ""
"By default, a transition line (with a `footnotes` class) will be placed "
"before any footnotes. This can be turned off by adding "
"`myst_footnote_transition = False` to the config file."
msgstr ""

#: ../../syntax/syntax.md:674
msgid "Code blocks"
msgstr ""

#: ../../syntax/syntax.md:677
msgid "Show backticks inside raw markdown blocks"
msgstr ""

#: ../../syntax/syntax.md:679
msgid ""
"If you'd like to show backticks inside of your markdown, you can do so by"
" nesting them in backticks of a greater length. Markdown will treat the "
"outer-most backticks as the edges of the \"raw\" block and everything "
"inside will show up. For example:"
msgstr ""

#: ../../syntax/syntax.md:683
msgid "``` `` `hi` `` ```  will be rendered as: `` `hi` ``"
msgstr ""

#: ../../syntax/syntax.md:685
msgid "and"
msgstr ""

#: ../../syntax/syntax.md:695
msgid "will be rendered as:"
msgstr ""

#: ../../syntax/syntax.md:619
msgid "This is a manually-numbered footnote definition."
msgstr ""

#: ../../syntax/syntax.md:618
msgid "This is an auto-numbered footnote definition."
msgstr ""

#: ../../syntax/syntax.md:641
msgid "This is the _**footnote definition**_."
msgstr ""

#: ../../syntax/syntax.md:643
msgid "That continues for all indented lines"
msgstr ""

#: ../../syntax/syntax.md:645
msgid "even other block elements"
msgstr ""

#: ../../syntax/syntax.md:647
msgid ""
"Plus any preceding unindented lines, that are not separated by a blank "
"line"
msgstr ""

#: ../../syntax/syntax.md:13
msgid "A definition within a directive"
msgstr ""

