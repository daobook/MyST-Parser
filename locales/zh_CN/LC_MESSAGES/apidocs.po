# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2024, Executable Book Project
# This file is distributed under the same license as the MyST Parser
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: MyST Parser 4.0.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-12-19 16:17+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: zh_CN\n"
"Language-Team: zh_CN <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.16.0\n"

#: ../../../docs/apidocs/index.rst:2
msgid "API Reference"
msgstr ""

#: ../../../docs/apidocs/index.rst:4
msgid "This page contains auto-generated API reference documentation [#f1]_."
msgstr ""

#: ../../../docs/apidocs/index.rst:11
msgid ""
"Created with `sphinx-autodoc2 <https://github.com/chrisjsewell/sphinx-"
"autodoc2>`_"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.rst:2
msgid ":py:mod:`myst_parser`"
msgstr ""

#: ../../../myst_parser/__init__.py:1
msgid ""
"An extended [CommonMark](https://spec.commonmark.org/) compliant parser, "
"with bridges to [docutils](https://docutils.sourceforge.io/) and "
"[Sphinx](https://github.com/sphinx-doc/sphinx)."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.rst:11
msgid "Subpackages"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.rst:23
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.rst:10
msgid "Submodules"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.rst:37
msgid "Package Contents"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser._compat.rst:15
#: ../../../docs/apidocs/myst_parser/myst_parser.cli.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:23
#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:27
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:33
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:24
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:27
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:31
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.mdit.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:39
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:65
#: ../../../docs/apidocs/myst_parser/myst_parser.rst:40
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:27
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.main.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:24
msgid "Functions"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.rst:46
msgid ":py:obj:`setup <myst_parser.setup>`"
msgstr ""

#: ../../../myst_parser/__init__.py:1
msgid "Initialize the [Sphinx](https://github.com/sphinx-doc/sphinx) extension."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser._compat.rst:26
#: ../../../docs/apidocs/myst_parser/myst_parser.cli.rst:24
#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:58
#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:59
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:68
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:67
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:47
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:35
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:33
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:36
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:41
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:92
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.mdit.rst:24
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:50
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:76
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst:35
#: ../../../docs/apidocs/myst_parser/myst_parser.rst:52
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:41
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.main.rst:27
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:41
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:35
#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:35
msgid "API"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser._compat.rst:4
msgid ":py:mod:`myst_parser._compat`"
msgstr ""

#: ../../../myst_parser/_compat.py:2
msgid "Helpers for cross compatibility across dependency versions."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser._compat.rst:12
#: ../../../docs/apidocs/myst_parser/myst_parser.cli.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.mdit.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.main.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:10
#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:10
msgid "Module Contents"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser._compat.rst:21
msgid ":py:obj:`findall <myst_parser._compat.findall>`"
msgstr ""

#: ../../../myst_parser/_compat.py:10
msgid "Iterate through"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.cli.rst:2
msgid ":py:mod:`myst_parser.cli`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.cli.rst:19
msgid ":py:obj:`print_anchors <myst_parser.cli.print_anchors>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.rst:2
msgid ":py:mod:`myst_parser.config`"
msgstr ""

#: ../../../myst_parser/config/__init__.py:2
msgid ""
"This module holds the global configuration for the parser "
"``MdParserConfig``."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:2
msgid ":py:mod:`myst_parser.config.dc_validators`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:2
msgid ""
"Validators for dataclasses, mirroring those of https://github.com/python-"
"attrs/attrs."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:13
#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:13
msgid "Classes"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:19
msgid ":py:obj:`ValidatorType <myst_parser.config.dc_validators.ValidatorType>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:29
msgid ":py:obj:`validate_field <myst_parser.config.dc_validators.validate_field>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:12
msgid ""
"Validate the field of a dataclass, according to a `validator` function "
"set in the field.metadata."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:32
msgid ""
":py:obj:`validate_fields "
"<myst_parser.config.dc_validators.validate_fields>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:28
msgid ""
"Validate the fields of a dataclass, according to `validator` functions "
"set in the field metadata."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:35
msgid ":py:obj:`any_ <myst_parser.config.dc_validators.any_>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:47
msgid "A validator that does not perform any validation."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:38
msgid ":py:obj:`instance_of <myst_parser.config.dc_validators.instance_of>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:53
msgid ""
"A validator that raises a `TypeError` if the initializer is called with a"
" wrong type for this particular attribute (checks are performed using "
"`isinstance` therefore it's also valid to pass a tuple of types)."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:41
msgid ":py:obj:`optional <myst_parser.config.dc_validators.optional>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:75
msgid ""
"A validator that makes an attribute optional.  An optional attribute is "
"one which can be set to ``None`` in addition to satisfying the "
"requirements of the sub-validator."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:44
msgid ":py:obj:`is_callable <myst_parser.config.dc_validators.is_callable>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:91
msgid ""
"A validator that raises a `TypeError` if the initializer is called with a"
" value for this particular attribute that is not callable."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:47
msgid ":py:obj:`in_ <myst_parser.config.dc_validators.in_>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:104
msgid ""
"A validator that raises a `ValueError` if the initializer is called with "
"a value that does not belong in the options provided.  The check is "
"performed using ``value in options``."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:50
msgid ":py:obj:`deep_iterable <myst_parser.config.dc_validators.deep_iterable>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:127
msgid "A validator that performs deep validation of an iterable."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:53
msgid ":py:obj:`deep_mapping <myst_parser.config.dc_validators.deep_mapping>`"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:147
msgid "A validator that performs deep validation of a dictionary."
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:15
#: ../../../myst_parser/config/dc_validators.py:33
msgid ""
"The validator function should take as input (inst, field, value) and "
"raise an exception if the value is invalid."
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:31
msgid "This function should be called in the `__post_init__` of the dataclass."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst:73
msgid "Bases: :py:obj:`typing.Protocol`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.dc_validators.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.main.rst
msgid "Parameters"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:57
msgid "The type to check for."
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:108
msgid "Allowed options."
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:129
msgid "Validator to apply to iterable members"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:130
msgid "Validator to apply to iterable itself"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:149
msgid "Validator to apply to dictionary keys"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:150
msgid "Validator to apply to dictionary values"
msgstr ""

#: ../../../myst_parser/config/dc_validators.py:151
msgid "Validator to apply to top-level mapping attribute (optional)"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:2
msgid ":py:mod:`myst_parser.config.main`"
msgstr ""

#: ../../../myst_parser/config/main.py:2
msgid "The configuration for the myst parser."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:19
msgid ":py:obj:`UrlSchemeType <myst_parser.config.main.UrlSchemeType>`"
msgstr ""

#: ../../../myst_parser/config/main.py:56
msgid "Type of the external schemes dictionary."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:22
msgid ":py:obj:`MdParserConfig <myst_parser.config.main.MdParserConfig>`"
msgstr ""

#: ../../../myst_parser/config/main.py:174
msgid "Configuration options for the Markdown Parser."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:33
msgid ":py:obj:`check_extensions <myst_parser.config.main.check_extensions>`"
msgstr ""

#: ../../../myst_parser/config/main.py:27
msgid "Check that the extensions are a list of known strings"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:36
msgid ":py:obj:`check_url_schemes <myst_parser.config.main.check_url_schemes>`"
msgstr ""

#: ../../../myst_parser/config/main.py:64
msgid "Check that the external schemes are of the right format."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:39
msgid ""
":py:obj:`check_sub_delimiters "
"<myst_parser.config.main.check_sub_delimiters>`"
msgstr ""

#: ../../../myst_parser/config/main.py:110
msgid ""
"Check that the sub_delimiters are a tuple of length 2 of strings of "
"length 1"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:42
msgid ":py:obj:`check_inventories <myst_parser.config.main.check_inventories>`"
msgstr ""

#: ../../../myst_parser/config/main.py:121
msgid "Check that the inventories are a dict of {str: (str, Optional[str])}"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:45
msgid ""
":py:obj:`check_heading_slug_func "
"<myst_parser.config.main.check_heading_slug_func>`"
msgstr ""

#: ../../../myst_parser/config/main.py:138
msgid "Check that the heading_slug_func is a callable."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:48
msgid ""
":py:obj:`check_fence_as_directive "
"<myst_parser.config.main.check_fence_as_directive>`"
msgstr ""

#: ../../../myst_parser/config/main.py:165
msgid "Check that the extensions are a sequence of known strings"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:51
msgid ":py:obj:`merge_file_level <myst_parser.config.main.merge_file_level>`"
msgstr ""

#: ../../../myst_parser/config/main.py:503
msgid "Merge the file-level topmatter with the global config."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:54
msgid ":py:obj:`read_topmatter <myst_parser.config.main.read_topmatter>`"
msgstr ""

#: ../../../myst_parser/config/main.py:568
msgid "Read the (optional) YAML topmatter from a source string."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:69
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:73
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:98
msgid "Bases: :py:obj:`typing.TypedDict`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:74
#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:372
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:78
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:103
#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:155
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:105
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:51
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:43
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:65
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:87
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:109
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:46
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:55
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:74
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:129
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:148
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:169
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:128
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:84
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:86
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:103
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:160
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:176
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:190
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:204
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:228
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:242
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:256
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:270
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:284
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:298
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:310
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:356
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:73
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:51
#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:45
msgid "Initialization"
msgstr ""

#: ../../../myst_parser/config/main.py:2 ../../../myst_parser/inventory.py:2
#: ../../../myst_parser/mocking.py:2
#: ../../../myst_parser/parsers/parse_html.py:2
msgid "Initialize self.  See help(type(self)) for accurate signature."
msgstr ""

#: ../../../myst_parser/config/main.py:176
msgid ""
"Note in the sphinx configuration these option names are prepended with "
"``myst_``"
msgstr ""

#: ../../../myst_parser/config/main.py:480
msgid "Return a new object replacing specified fields with new values."
msgstr ""

#: ../../../myst_parser/config/main.py:482
msgid "Note: initiating the copy will also validate the new fields."
msgstr ""

#: ../../../myst_parser/config/main.py:488
msgid "Return all attribute fields in this class."
msgstr ""

#: ../../../myst_parser/config/main.py:492
msgid "Return a dictionary of field name -> value."
msgstr ""

#: ../../../myst_parser/config/main.py:496
msgid "Yield triples of (name, value, field)."
msgstr ""

#: ../../../myst_parser/config/main.py:505
msgid "Global config."
msgstr ""

#: ../../../myst_parser/config/main.py:506
msgid "Topmatter from the file."
msgstr ""

#: ../../../myst_parser/config/main.py:507
msgid "Function to call with a warning (type, message)."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst
msgid "Returns"
msgstr ""

#: ../../../myst_parser/config/main.py:508
msgid "A new config object"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.config.main.rst:367
#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:41
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:218
msgid "Bases: :py:obj:`Exception`"
msgstr ""

#: ../../../myst_parser/config/main.py:564
msgid "Topmatter parsing error."
msgstr ""

#: ../../../myst_parser/config/main.py:570
msgid ""
"This is identified by the first line starting with `---`, then read up to"
" a terminating line of `---`, or `...`."
msgstr ""

#: ../../../myst_parser/config/main.py:573
msgid "The source string to read from"
msgstr ""

#: ../../../myst_parser/config/main.py:574
msgid "The topmatter"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.docutils_.rst:2
msgid ":py:mod:`myst_parser.docutils_`"
msgstr ""

#: ../../../myst_parser/docutils_.py:2
msgid ""
"A module for compatibility with the docutils>=0.17 `include` directive, "
"in RST documents:"
msgstr ""

#: ../../../myst_parser/docutils_.py:4 ../../../myst_parser/sphinx_.py:4
msgid "For example::"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:2
msgid ":py:mod:`myst_parser.inventory`"
msgstr ""

#: ../../../myst_parser/inventory.py:2
msgid "Logic for dealing with sphinx style inventories (e.g. `objects.inv`)."
msgstr ""

#: ../../../myst_parser/inventory.py:4
msgid ""
"These contain mappings of reference names to ids, scoped by domain and "
"object type."
msgstr ""

#: ../../../myst_parser/inventory.py:6
msgid ""
"This is adapted from the Sphinx inventory.py module. We replicate it "
"here, so that it can be used without Sphinx."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:19
msgid ":py:obj:`InventoryItemType <myst_parser.inventory.InventoryItemType>`"
msgstr ""

#: ../../../myst_parser/inventory.py:31
msgid "A single inventory item."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:22
msgid ":py:obj:`InventoryType <myst_parser.inventory.InventoryType>`"
msgstr ""

#: ../../../myst_parser/inventory.py:40
msgid "Inventory data."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:25
msgid ":py:obj:`InventoryFileReader <myst_parser.inventory.InventoryFileReader>`"
msgstr ""

#: ../../../myst_parser/inventory.py:181
msgid "A file reader for an inventory file."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:28
msgid ":py:obj:`InvMatch <myst_parser.inventory.InvMatch>`"
msgstr ""

#: ../../../myst_parser/inventory.py:278
msgid "A match from an inventory."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:39
msgid ":py:obj:`from_sphinx <myst_parser.inventory.from_sphinx>`"
msgstr ""

#: ../../../myst_parser/inventory.py:53
msgid "Convert from a Sphinx compliant format."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:42
msgid ":py:obj:`to_sphinx <myst_parser.inventory.to_sphinx>`"
msgstr ""

#: ../../../myst_parser/inventory.py:79
msgid "Convert to a Sphinx compliant format."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:45
msgid ":py:obj:`load <myst_parser.inventory.load>`"
msgstr ""

#: ../../../myst_parser/inventory.py:94
msgid "Load inventory data from a stream."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:48
msgid ":py:obj:`match_with_wildcard <myst_parser.inventory.match_with_wildcard>`"
msgstr ""

#: ../../../myst_parser/inventory.py:265
msgid ""
"Match a whole name with a pattern, that can include `*` wildcards, to "
"match 0 or more characters."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:51
msgid ":py:obj:`filter_inventories <myst_parser.inventory.filter_inventories>`"
msgstr ""

#: ../../../myst_parser/inventory.py:295
msgid "Filter a set of inventories."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:54
msgid ""
":py:obj:`filter_sphinx_inventories "
"<myst_parser.inventory.filter_sphinx_inventories>`"
msgstr ""

#: ../../../myst_parser/inventory.py:338
msgid "Filter a set of sphinx style inventories."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:57
msgid ":py:obj:`filter_string <myst_parser.inventory.filter_string>`"
msgstr ""

#: ../../../myst_parser/inventory.py:387
msgid "Create a string representation of the filter, from the given arguments."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:60
msgid ":py:obj:`fetch_inventory <myst_parser.inventory.fetch_inventory>`"
msgstr ""

#: ../../../myst_parser/inventory.py:407
msgid "Fetch an inventory from a URL or local path."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.inventory.rst:63
msgid ":py:obj:`inventory_cli <myst_parser.inventory.inventory_cli>`"
msgstr ""

#: ../../../myst_parser/inventory.py:418
msgid "Command line interface for fetching and parsing an inventory."
msgstr ""

#: ../../../myst_parser/inventory.py:34
msgid "The location of the item (relative if base_url not None)."
msgstr ""

#: ../../../myst_parser/inventory.py:36
msgid "Implicit text to show for the item."
msgstr ""

#: ../../../myst_parser/inventory.py:43
msgid "The name of the project."
msgstr ""

#: ../../../myst_parser/inventory.py:45
msgid "The version of the project."
msgstr ""

#: ../../../myst_parser/inventory.py:47
msgid "The base URL of the `loc`."
msgstr ""

#: ../../../myst_parser/inventory.py:49
msgid "Mapping of domain -> object type -> name -> item."
msgstr ""

#: ../../../myst_parser/inventory.py:183
msgid "This reader supports mixture of texts and compressed texts."
msgstr ""

#: ../../../myst_parser/inventory.py:268 ../../../myst_parser/inventory.py:298
#: ../../../myst_parser/inventory.py:341
msgid "To include a literal `*` in the pattern, use `\\*`."
msgstr ""

#: ../../../myst_parser/inventory.py:297 ../../../myst_parser/inventory.py:340
msgid ""
"Filters are strings that can include `*` wildcards, to match 0 or more "
"characters."
msgstr ""

#: ../../../myst_parser/inventory.py:300 ../../../myst_parser/inventory.py:343
msgid "Mapping of inventory name to inventory data"
msgstr ""

#: ../../../myst_parser/inventory.py:301 ../../../myst_parser/inventory.py:344
msgid "the inventory key filter"
msgstr ""

#: ../../../myst_parser/inventory.py:302 ../../../myst_parser/inventory.py:345
msgid "the domain name filter"
msgstr ""

#: ../../../myst_parser/inventory.py:303 ../../../myst_parser/inventory.py:346
msgid "the object type filter"
msgstr ""

#: ../../../myst_parser/inventory.py:304 ../../../myst_parser/inventory.py:347
msgid "the target name filter"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.rst:2
msgid ":py:mod:`myst_parser.mdit_to_docutils`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/__init__.py:2
msgid "Conversion of Markdown-it tokens to docutils AST."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/__init__.py:4
msgid ""
"These renderers take the markdown-it parsed token stream and convert it "
"to the docutils AST. The sphinx renderer is a subclass of the docutils "
"one, with some additional methods only available *via* sphinx e.g. multi-"
"document cross-referencing."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:2
msgid ":py:mod:`myst_parser.mdit_to_docutils.base`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:2
msgid "Convert Markdown-it tokens to docutils nodes."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:19
msgid ""
":py:obj:`DocutilsRenderer "
"<myst_parser.mdit_to_docutils.base.DocutilsRenderer>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:90
#: ../../../myst_parser/mdit_to_docutils/sphinx_.py:27
msgid ""
"A markdown-it-py renderer to populate (in-place) a `docutils.document` "
"AST."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:30
msgid ":py:obj:`make_document <myst_parser.mdit_to_docutils.base.make_document>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:62
msgid "Create a new docutils document, with the parser classes' default settings."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:33
msgid ":py:obj:`token_line <myst_parser.mdit_to_docutils.base.token_line>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:81
msgid "Retrieve the initial line of a token."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:36
msgid ""
":py:obj:`html_meta_to_nodes "
"<myst_parser.mdit_to_docutils.base.html_meta_to_nodes>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1886
msgid ""
"Replicate the `meta` directive, by converting a dictionary to a list of "
"pending meta nodes"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:39
msgid ":py:obj:`clean_astext <myst_parser.mdit_to_docutils.base.clean_astext>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1934
msgid "Like node.astext(), but ignore images. Copied from sphinx."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:42
msgid ""
":py:obj:`default_slugify "
"<myst_parser.mdit_to_docutils.base.default_slugify>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1949
msgid "Default slugify function."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:45
msgid ""
":py:obj:`compute_unique_slug "
"<myst_parser.mdit_to_docutils.base.compute_unique_slug>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1960
msgid "Compute the slug for a token."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:50
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:30
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:24
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:81
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst:24
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:30
#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:24
msgid "Data"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:56
msgid ":py:obj:`REGEX_SCHEME <myst_parser.mdit_to_docutils.base.REGEX_SCHEME>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:68
msgid ""
"RFC 7595: A non-empty scheme component followed by a colon (:), "
"consisting of a sequence of characters beginning with a letter and "
"followed by any combination of letters, digits, plus (+), period (.), or "
"hyphen (-). Although schemes are case-insensitive, the canonical form is "
"lowercase and documents that specify schemes must do so with lowercase "
"letters."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:59
msgid ""
":py:obj:`REGEX_URI_TEMPLATE "
"<myst_parser.mdit_to_docutils.base.REGEX_URI_TEMPLATE>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:62
msgid ""
":py:obj:`REGEX_DIRECTIVE_START "
"<myst_parser.mdit_to_docutils.base.REGEX_DIRECTIVE_START>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.base.rst:100
msgid "Bases: :py:obj:`markdown_it.renderer.RendererProtocol`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:92
msgid "Note, this render is not dependent on Sphinx."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:98
#: ../../../myst_parser/mdit_to_docutils/sphinx_.py:98
msgid "Load the renderer (called by ``MarkdownIt``)"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:129
msgid "Setup the renderer with per render variables."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:153
msgid "Return the sphinx env, if using Sphinx."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:160
#: ../../../myst_parser/warnings_.py:96
msgid "Generate a warning, logging if it is necessary."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:162
#: ../../../myst_parser/warnings_.py:98
msgid ""
"If the warning type is listed in the ``suppress_warnings`` configuration,"
" then ``None`` will be returned and no warning logged."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:209
msgid "Run the render on a token stream."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:211
msgid "list on block tokens to render"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:212
msgid "params of parser instance"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:213
msgid ""
"the markdown-it environment sandbox associated with the tokens, "
"containing additional metadata like reference info"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:285
msgid "Render unparsed text (appending to the current node)."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:287
msgid "the text to render"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:288
msgid "the starting line number of the text, within the full source"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:289
msgid "whether the text is inline or block"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:290
msgid "If set, allow sections to be created as children of this node"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:291
msgid "offset heading levels by this amount"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:336
msgid "Context manager for temporarily setting the current node."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:347
msgid "Render the children of a token."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:360
msgid "Copy the line number and document source path to the docutils node."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:366
msgid ""
"Copy the line number and document source path to the docutils nodes, and "
"recursively to all descendants."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:377
msgid "Copy attributes on the token to the docutils node."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:379
msgid "the token to copy attributes from"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:380
msgid "the node to copy attributes to"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:381
msgid "the keys to copy from the token (after aliasing)"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:382
msgid "a dictionary of converters for the attributes"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:383
msgid "a dictionary mapping the token key name to the node key name"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:422
msgid "Update the section level state, with the new current section and level."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:457
msgid "Special kludge for image `alt` attributes to conform CommonMark spec."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:459
msgid ""
"Don't try to use it! Spec requires to show `alt` content with stripped "
"markup, instead of simple escaping."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:590
msgid "Create a literal block with syntax highlighting."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:592
msgid "This mimics the behaviour of the `code-block` directive."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:594
msgid ""
"In docutils, this directive directly parses the text with the pygments "
"lexer, whereas in sphinx, the lexer name is only recorded as the "
"`language` attribute, and the text is lexed later by pygments within the "
"`visit_literal_block` method of the output format ``SphinxTranslator``."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:599
msgid "Note, this function does not add the literal block to the document."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:698
msgid "Render a fenced code block."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:750
msgid ""
"Only add mathjax ignore classes if using sphinx, and using the "
"``dollarmath`` extension, and ``myst_update_mathjax=True``."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:760
msgid "Generate a heading target, and add it to the document."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:806
msgid "Render a heading, e.g. `# Heading`."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:858
msgid ""
"Parse `<http://link.com>` or `[text](link \"title\")` syntax to docutils "
"AST:"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:860
msgid "If `myst_all_links_external` is True, forward to `render_link_url`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:861
msgid "If the link token has a class attribute containing `external`,"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:862
msgid "forward to `render_link_url`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:863
msgid "If the link is an id link (e.g. `#id`), forward to `render_link_anchor`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:864
msgid ""
"If the link has a schema, and the schema is in `url_schemes` (e.g. "
"`http:`), forward to `render_link_url`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:866
msgid "If the link has an `inv:` schema, forward to `render_link_inventory`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:867
msgid "If the link is an autolink/linkify type link, forward to `render_link_url`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:868
msgid "Otherwise, forward to `render_link_internal`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:903
msgid ""
"Render link token (including autolink and linkify), where the link has "
"been identified as an external URL."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:967
msgid "Render a link token like `<path:...>`."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:977
msgid "Render a link token like `<project:...>`."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:992
msgid "Render link token like `[text](#target)`, to a local target."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py
msgid "target"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:994
msgid "the target id, e.g. `#target`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1009
msgid ""
"Render link token `[text](link \"title\")`, where the link has not been "
"identified as an external URL::"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1015
msgid "`text` can contain nested syntax, e.g. `[**bold**](link \"title\")`."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1017
msgid "Note, this is overridden by `SphinxRenderer`, to use `pending_xref` nodes."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1030
msgid "Create a link to an inventory object."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1032
msgid ""
"This assumes the href is of the form `<scheme>:<path>#<target>`. The path"
" is of the form `<invs>:<domains>:<otypes>`, where each of the parts is "
"optional, hence `<scheme>:#<target>` is also valid. Each of the path "
"parts can contain the `*` wildcard, for example: "
"`<scheme>:key:*:obj#targe*`. `\\*` is treated as a plain `*`."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1116
msgid "Return inventory matches."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1118
msgid "This will be overridden for sphinx, to use intersphinx config."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1197
msgid "Render an inline span token."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1205
msgid "Pass document front matter data."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1246
msgid "Render each key/val pair as a docutils ``field_node``."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1248
msgid ""
"Bibliographic keys below will be parsed as Markdown, all others will be "
"left as literal text."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1251
msgid ""
"The field list should be at the start of the document, and will then be "
"converted to a `docinfo` node during the "
"`docutils.docutils.transforms.frontmatter.DocInfo` transform (priority "
"340), and bibliographic keys (or their translation) will be converted to "
"nodes::"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1269
msgid ""
"Also, the 'dedication' and 'abstract' will be placed outside the "
"`docinfo`, and so will always be shown in the document."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1272
msgid ""
"If using sphinx, this `docinfo` node will later be extracted from the "
"AST, by the `DoctreeReadEvent` transform (priority 880), calling "
"`MetadataCollector.process_doc`. In this case keys and values will be "
"converted to strings and stored in `app.env.metadata[app.env.docname]`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1278
msgid ""
"See https://www.sphinx-doc.org/en/master/usage/restructuredtext/field-"
"lists.html for docinfo fields used by sphinx."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1372
msgid "Render a strikethrough token."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1430
msgid ""
"Footnote references are added as auto-numbered, .i.e. `[^a]` is read as "
"rST `[#a]_`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1451
msgid "Despite the name, this is actually a footnote definition, e.g. `[^a]: ...`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1525
msgid "Render a div block, with ``:`` colon delimiters."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1551
msgid "Render a definition list."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1610
msgid "Render a field list."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1647
msgid "Render the content of the token as restructuredtext."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1663
msgid "Render special fenced code blocks as directives."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1665
msgid "the token to render"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1666
#: ../../../myst_parser/mdit_to_docutils/base.py:1689
msgid "the name of the directive"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1667
msgid "The remaining text on the same line as the directive name."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1687
msgid "Run a directive and return the generated nodes."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1690
#: ../../../myst_parser/parsers/directives.py:83
msgid ""
"The text on the same line as the directive name. May be an argument or "
"body text, dependent on the directive"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1692
#: ../../../myst_parser/parsers/directives.py:85
msgid "All text after the first line. Can include options."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1693
msgid "The line number of the first line"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1694
msgid ""
"Additional options to add to the directive, above those parsed from the "
"content."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1809
msgid "Render inline substitution {{key}}."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1813
msgid "Render block substitution {{key}}."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1817
msgid "Substitutions are rendered by:"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1819
msgid ""
"Combining global substitutions with front-matter substitutions to create "
"a variable context (front-matter takes priority)"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1821
msgid "Add the sphinx `env` to the variable context (if available)"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1822
msgid "Create the string content with Jinja2 (passing it the variable context)"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1823
msgid ""
"If the substitution is inline and not a directive, parse to nodes "
"ignoring block syntaxes (like lists or block-quotes), otherwise parse to "
"nodes with all syntax rules."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1889
msgid ""
"See: https://www.sphinx-"
"doc.org/en/master/usage/restructuredtext/basics.html#html-metadata"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1951
msgid "This aims to mimic the GitHub Markdown format, see:"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1953
msgid ""
"https://github.com/jch/html-"
"pipeline/blob/master/lib/html/pipeline/toc_filter.rb"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1954
msgid "https://gist.github.com/asabaylus/3071099"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/base.py:1962
msgid "This directly mirrors the logic in `mdit_py_plugins.anchors_plugin`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:2
msgid ":py:mod:`myst_parser.mdit_to_docutils.html_to_nodes`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/html_to_nodes.py:2
#: ../../../myst_parser/mdit_to_docutils/html_to_nodes.py:48
msgid "Convert HTML to docutils nodes."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:19
msgid ""
":py:obj:`make_error "
"<myst_parser.mdit_to_docutils.html_to_nodes.make_error>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:22
msgid ""
":py:obj:`default_html "
"<myst_parser.mdit_to_docutils.html_to_nodes.default_html>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:25
msgid ""
":py:obj:`html_to_nodes "
"<myst_parser.mdit_to_docutils.html_to_nodes.html_to_nodes>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:36
msgid ""
":py:obj:`OPTION_KEYS_IMAGE "
"<myst_parser.mdit_to_docutils.html_to_nodes.OPTION_KEYS_IMAGE>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:39
msgid ""
":py:obj:`OPTION_KEYS_ADMONITION "
"<myst_parser.mdit_to_docutils.html_to_nodes.OPTION_KEYS_ADMONITION>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.html_to_nodes.rst:42
msgid ":py:obj:`RE_FLOW <myst_parser.mdit_to_docutils.html_to_nodes.RE_FLOW>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:2
msgid ":py:mod:`myst_parser.mdit_to_docutils.sphinx_`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/sphinx_.py:2
msgid ""
"Convert Markdown-it tokens to docutils nodes, including sphinx specific "
"elements."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:19
msgid ""
":py:obj:`SphinxRenderer "
"<myst_parser.mdit_to_docutils.sphinx_.SphinxRenderer>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:30
msgid ":py:obj:`LOGGER <myst_parser.mdit_to_docutils.sphinx_.LOGGER>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.sphinx_.rst:46
msgid "Bases: :py:obj:`myst_parser.mdit_to_docutils.base.DocutilsRenderer`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/sphinx_.py:29
msgid ""
"This is sub-class of `DocutilsRenderer` that handles sphinx specific "
"aspects, such as cross-referencing."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/sphinx_.py:127
msgid ""
"Render link token `[text](link \"title\")`, where the link has not been "
"identified as an external URL."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/sphinx_.py:186
msgid "Render math with referenceable labels, e.g. ``$a=1$ (label)``."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/sphinx_.py:202
msgid "Renderer for the amsmath extension."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:2
msgid ":py:mod:`myst_parser.mdit_to_docutils.transforms`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:2
msgid "Directives that can be applied to both Sphinx and docutils."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:19
msgid ""
":py:obj:`UnreferencedFootnotesDetector "
"<myst_parser.mdit_to_docutils.transforms.UnreferencedFootnotesDetector>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:19
msgid "Detect unreferenced footnotes and emit warnings."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:22
msgid ""
":py:obj:`SortFootnotes "
"<myst_parser.mdit_to_docutils.transforms.SortFootnotes>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:70
msgid "Sort auto-numbered, labelled footnotes by the order they are referenced."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:25
msgid ""
":py:obj:`CollectFootnotes "
"<myst_parser.mdit_to_docutils.transforms.CollectFootnotes>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:99
msgid "Transform to move footnotes to the end of the document, and sort by label."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:28
msgid ""
":py:obj:`ResolveAnchorIds "
"<myst_parser.mdit_to_docutils.transforms.ResolveAnchorIds>`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:143
msgid "Transform for resolving `[name](#id)` type links."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:38
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:60
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:82
#: ../../../docs/apidocs/myst_parser/myst_parser.mdit_to_docutils.transforms.rst:104
msgid "Bases: :py:obj:`docutils.transforms.Transform`"
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:21
msgid ""
"Replicates https://github.com/sphinx-doc/sphinx/pull/12730, but also "
"allows for use in docutils (without sphinx)."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:42
#: ../../../myst_parser/sphinx_ext/myst_refs.py:42
msgid "Initial setup for in-place document transforms."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:30
#: ../../../myst_parser/mdit_to_docutils/transforms.py:80
#: ../../../myst_parser/mdit_to_docutils/transforms.py:106
#: ../../../myst_parser/mdit_to_docutils/transforms.py:148
msgid "Apply the transform."
msgstr ""

#: ../../../myst_parser/mdit_to_docutils/transforms.py:72
msgid ""
"This is run before the docutils ``Footnote`` transform, where numbered "
"labels are assigned."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:2
msgid ":py:mod:`myst_parser.mocking`"
msgstr ""

#: ../../../myst_parser/mocking.py:2
msgid ""
"This module provides classes to Mock the core components of the "
"docutils.RSTParser, the key difference being that nested parsing treats "
"the text as Markdown not rST."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:19
msgid ":py:obj:`MockInliner <myst_parser.mocking.MockInliner>`"
msgstr ""

#: ../../../myst_parser/mocking.py:33
msgid "A mock version of `docutils.parsers.rst.states.Inliner`."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:22
msgid ":py:obj:`MockState <myst_parser.mocking.MockState>`"
msgstr ""

#: ../../../myst_parser/mocking.py:96
msgid "A mock version of `docutils.parsers.rst.states.RSTState`."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:25
msgid ":py:obj:`MockStateMachine <myst_parser.mocking.MockStateMachine>`"
msgstr ""

#: ../../../myst_parser/mocking.py:312
msgid "A mock version of `docutils.parsers.rst.states.RSTStateMachine`."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:28
msgid ":py:obj:`MockIncludeDirective <myst_parser.mocking.MockIncludeDirective>`"
msgstr ""

#: ../../../myst_parser/mocking.py:346
msgid ""
"This directive uses a lot of statemachine logic that is not yet mocked. "
"Therefore, we treat it as a special case (at least for now)."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:31
msgid ":py:obj:`MockRSTParser <myst_parser.mocking.MockRSTParser>`"
msgstr ""

#: ../../../myst_parser/mocking.py:542
msgid "RSTParser which avoids a negative side effect."
msgstr ""

#: ../../../myst_parser/mocking.py:29
msgid "An exception to signal an error during mocking of docutils components."
msgstr ""

#: ../../../myst_parser/mocking.py:35
msgid "This is parsed to role functions."
msgstr ""

#: ../../../myst_parser/mocking.py:39
msgid "Initialize the mock inliner."
msgstr ""

#: ../../../myst_parser/mocking.py:55
msgid "Record a system message from parsing."
msgstr ""

#: ../../../myst_parser/mocking.py:65
msgid "Parse the text and return a list of nodes."
msgstr ""

#: ../../../myst_parser/mocking.py:98
msgid ""
"This is parsed to the `Directives.run()` method, so that they may run "
"nested parses on their content that will be parsed as markdown, rather "
"than RST."
msgstr ""

#: ../../../myst_parser/mocking.py:128
msgid "Parse the full directive text"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst
msgid "Raises"
msgstr ""

#: ../../../myst_parser/mocking.py:130
msgid "for errors in parsing the directive"
msgstr ""

#: ../../../myst_parser/mocking.py:131
msgid "(arguments, options, content, content_offset)"
msgstr ""

#: ../../../myst_parser/mocking.py:154
msgid "Perform a nested parse of the input block, with ``node`` as the parent."
msgstr ""

#: ../../../myst_parser/mocking.py:156
msgid "The block of lines to parse."
msgstr ""

#: ../../../myst_parser/mocking.py:157
msgid ""
"The offset of the first line of block, to the starting line of the state "
"(i.e. directive)."
msgstr ""

#: ../../../myst_parser/mocking.py:159
msgid "The parent node to attach the parsed content to."
msgstr ""

#: ../../../myst_parser/mocking.py:160
msgid ""
"Whether to to allow the parsing of headings (normally this is false, "
"since nested heading would break the document structure)"
msgstr ""

#: ../../../myst_parser/mocking.py:182
msgid ""
"Taken from https://github.com/docutils-"
"mirror/docutils/blob/e88c5fb08d5cdfa8b4ac1020dd6f7177778d5990/docutils/parsers/rst/states.py#L1927"
msgstr ""

#: ../../../myst_parser/mocking.py:195
msgid "Parse text with only inline rules."
msgstr ""

#: ../../../myst_parser/mocking.py:197
msgid "(list of nodes, list of messages)"
msgstr ""

#: ../../../myst_parser/mocking.py:207
msgid ""
"Parse a block quote, which is a block of text, followed by an (optional) "
"attribution."
msgstr ""

#: ../../../myst_parser/mocking.py:268
msgid "Modify the line block element in-place, to nest line block segments."
msgstr ""

#: ../../../myst_parser/mocking.py:270
msgid ""
"Line nodes are placed into child line block containers, based on their "
"indentation."
msgstr ""

#: ../../../myst_parser/mocking.py:314
msgid "This is parsed to the `Directives.run()` method."
msgstr ""

#: ../../../myst_parser/mocking.py:327
msgid "Return document source path."
msgstr ""

#: ../../../myst_parser/mocking.py:331
msgid "Return (source path, line) tuple for current or given line number."
msgstr ""

#: ../../../myst_parser/mocking.py:349
msgid ""
"See: https://docutils.sourceforge.io/docs/ref/rst/directives.html"
"#including-an-external-document-fragment"
msgstr ""

#: ../../../myst_parser/mocking.py:529
msgid "Append self.options['name'] to node['names'] if it exists."
msgstr ""

#: ../../../myst_parser/mocking.py:531
msgid "Also normalize the name string and register it as explicit target."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.mocking.rst:164
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:123
msgid "Bases: :py:obj:`docutils.parsers.rst.Parser`"
msgstr ""

#: ../../../myst_parser/mocking.py:545
msgid "Parse the input to populate the document AST."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.rst:2
msgid ":py:mod:`myst_parser.parsers`"
msgstr ""

#: ../../../myst_parser/parsers/__init__.py:2
msgid "Parsers of MyST Markdown source text to docutils AST."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:2
msgid ":py:mod:`myst_parser.parsers.directives`"
msgstr ""

#: ../../../myst_parser/parsers/directives.py:2
msgid ""
"Fenced code blocks are parsed as directives, if the block starts with "
"``{directive_name}``, followed by arguments on the same line."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:6
msgid ""
"Directive options are read from a YAML block, if the first content line "
"starts with ``---``, e.g."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:20
msgid ""
"Or the option block will be parsed if the first content line starts with "
"``:``, as a YAML block consisting of every line that starts with a ``:``,"
" e.g."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:32
msgid ""
"If the first line of a directive's content is blank, this will be "
"stripped from the content. This is to allow for separation between the "
"option block and content."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:19
msgid ":py:obj:`ParseWarnings <myst_parser.parsers.directives.ParseWarnings>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:22
msgid ""
":py:obj:`DirectiveParsingResult "
"<myst_parser.parsers.directives.DirectiveParsingResult>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:33
msgid ""
":py:obj:`parse_directive_text "
"<myst_parser.parsers.directives.parse_directive_text>`"
msgstr ""

#: ../../../myst_parser/parsers/directives.py:81
msgid "Parse (and validate) the full directive text."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.directives.rst:36
msgid ""
":py:obj:`parse_directive_arguments "
"<myst_parser.parsers.directives.parse_directive_arguments>`"
msgstr ""

#: ../../../myst_parser/parsers/directives.py:311
msgid "Parse (and validate) the directive argument section."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:67
msgid "The arguments parsed from the first line."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:69
msgid "Options parsed from the YAML block."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:71
msgid "The lines of body content"
msgstr ""

#: ../../../myst_parser/parsers/directives.py:73
msgid "The number of lines to the start of the body content."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:75
msgid ""
"List of non-fatal errors encountered during parsing. (message, "
"line_number)"
msgstr ""

#: ../../../myst_parser/parsers/directives.py:86
msgid ""
"Whether to validate the values of options This is actually only here to "
"be used by myst-nb cells, which converts options directly to JSON "
"metadata, using the full YAML spec."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:89
msgid ""
"Additional options to add to the directive, above those parsed from the "
"content (content options take priority)."
msgstr ""

#: ../../../myst_parser/parsers/directives.py:92
msgid "if there is a fatal parsing/validation error"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:2
msgid ":py:mod:`myst_parser.parsers.docutils_`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:2
msgid "MyST Markdown parser for docutils."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:19
msgid ":py:obj:`Unset <myst_parser.parsers.docutils_.Unset>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:73
msgid "A sentinel class for unset settings."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:22
msgid ":py:obj:`Parser <myst_parser.parsers.docutils_.Parser>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:237
msgid "Docutils parser for Markedly Structured Text (MyST)."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:25
msgid ""
":py:obj:`SimpleTranslator "
"<myst_parser.parsers.docutils_.SimpleTranslator>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:27
msgid ":py:obj:`SimpleWriter <myst_parser.parsers.docutils_.SimpleWriter>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:37
msgid ""
":py:obj:`attr_to_optparse_option "
"<myst_parser.parsers.docutils_.attr_to_optparse_option>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:192
msgid "Convert an ``MdParserConfig`` attribute into a Docutils setting tuple."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:40
msgid ""
":py:obj:`create_myst_settings_spec "
"<myst_parser.parsers.docutils_.create_myst_settings_spec>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:210
msgid "Return a list of Docutils setting for the docutils MyST section."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:43
msgid ""
":py:obj:`create_myst_config "
"<myst_parser.parsers.docutils_.create_myst_config>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:220
msgid "Create a configuration instance from the given settings."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:46
msgid ":py:obj:`cli_html <myst_parser.parsers.docutils_.cli_html>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:365
msgid "Cmdline entrypoint for converting MyST to HTML."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:49
msgid ":py:obj:`cli_html5 <myst_parser.parsers.docutils_.cli_html5>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:370
msgid "Cmdline entrypoint for converting MyST to HTML5."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:52
msgid ":py:obj:`cli_html5_demo <myst_parser.parsers.docutils_.cli_html5_demo>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:375
msgid "Cmdline entrypoint for converting MyST to simple HTML5 demonstrations."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:55
msgid ":py:obj:`to_html5_demo <myst_parser.parsers.docutils_.to_html5_demo>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:396
msgid "Convert a MyST string to HTML5."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:58
msgid ":py:obj:`cli_latex <myst_parser.parsers.docutils_.cli_latex>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:413
msgid "Cmdline entrypoint for converting MyST to LaTeX."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:61
msgid ":py:obj:`cli_xml <myst_parser.parsers.docutils_.cli_xml>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:418
msgid "Cmdline entrypoint for converting MyST to XML."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:64
msgid ":py:obj:`cli_pseudoxml <myst_parser.parsers.docutils_.cli_pseudoxml>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:423
msgid "Cmdline entrypoint for converting MyST to pseudo-XML."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:67
msgid ""
":py:obj:`visit_rubric_html "
"<myst_parser.parsers.docutils_.visit_rubric_html>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:428
#: ../../../myst_parser/parsers/docutils_.py:489
msgid "Override the default HTML visit method for rubric nodes."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:70
msgid ""
":py:obj:`depart_rubric_html "
"<myst_parser.parsers.docutils_.depart_rubric_html>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:73
msgid ""
":py:obj:`visit_container_html "
"<myst_parser.parsers.docutils_.visit_container_html>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:500
msgid "Override the default HTML visit method for container nodes."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:76
msgid ""
":py:obj:`depart_container_html "
"<myst_parser.parsers.docutils_.depart_container_html>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:516
msgid "Override the default HTML depart method for container nodes."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:87
msgid ":py:obj:`DOCUTILS_UNSET <myst_parser.parsers.docutils_.DOCUTILS_UNSET>`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:84
msgid "Sentinel for arguments not set through docutils.conf."
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:194
msgid "A tuple of ``(help string, option flags, optparse kwargs)``."
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:240
#: ../../../myst_parser/parsers/sphinx_.py:33
msgid "Aliases this parser supports."
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:243
#: ../../../myst_parser/parsers/sphinx_.py:36
msgid "Runtime settings specification."
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:263
#: ../../../myst_parser/parsers/sphinx_.py:61
msgid "Parse source text."
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:265
#: ../../../myst_parser/parsers/sphinx_.py:63
msgid "The source string to parse"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:266
#: ../../../myst_parser/parsers/sphinx_.py:64
msgid "The root docutils node to add AST elements to"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:173
msgid "Bases: :py:obj:`docutils.writers.html5_polyglot.HTMLTranslator`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.docutils_.rst:181
msgid "Bases: :py:obj:`docutils.writers.html5_polyglot.Writer`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:377
msgid ""
"This is a special case of the HTML5 writer, that only outputs the body of"
" the document."
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:430
msgid ""
"docutils structures a document, based on the headings, into nested "
"sections::"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:446
msgid ""
"This means that it is not possible to have \"standard\" headings nested "
"inside other components, such as blockquotes, because it would break the "
"structure::"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:464
msgid ""
"we work around this shortcoming, in `DocutilsRenderer.render_heading`, by"
" identifying if a heading is inside another component and instead "
"outputting it as a \"non-structural\" rubric node, and capture the "
"level::"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:478
msgid ""
"However, docutils natively just outputs rubrics as <p> tags, and does not"
" \"honor\" the heading level. So here we override the visit/depart "
"methods to output the correct <h> element"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:491
msgid "See explanation in `visit_rubric_html`"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:502
msgid ""
"to remove the \"container\" class for divs this avoids CSS clashes with "
"the bootstrap theme"
msgstr ""

#: ../../../myst_parser/parsers/docutils_.py:518
msgid "See explanation in `visit_container_html`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.mdit.rst:2
msgid ":py:mod:`myst_parser.parsers.mdit`"
msgstr ""

#: ../../../myst_parser/parsers/mdit.py:2
msgid ""
"This module holds the ``create_md_parser`` function, which creates a "
"parser from the config."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.mdit.rst:19
msgid ":py:obj:`create_md_parser <myst_parser.parsers.mdit.create_md_parser>`"
msgstr ""

#: ../../../myst_parser/parsers/mdit.py:30
msgid "Return a Markdown parser with the required MyST configuration."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:2
msgid ":py:mod:`myst_parser.parsers.options`"
msgstr ""

#: ../../../myst_parser/parsers/options.py:2
msgid "Parser for directive options."
msgstr ""

#: ../../../myst_parser/parsers/options.py:4
msgid ""
"This is a highly restricted parser for YAML, which only allows a subset "
"of YAML to be used for directive options:"
msgstr ""

#: ../../../myst_parser/parsers/options.py:7
msgid "Only block mappings are allowed at the top level"
msgstr ""

#: ../../../myst_parser/parsers/options.py:8
msgid "Mapping keys are parsed as strings (plain or quoted)"
msgstr ""

#: ../../../myst_parser/parsers/options.py:9
msgid ""
"Mapping values are parsed as strings (plain, quoted, literal `|`, folded "
"`>`)"
msgstr ""

#: ../../../myst_parser/parsers/options.py:10
msgid "`#` Comments are allowed and blank lines"
msgstr ""

#: ../../../myst_parser/parsers/options.py:12
msgid ""
"Adapted from: "
"https://github.com/yaml/pyyaml/commit/957ae4d495cf8fcb5475c6c2f1bce801096b68a5"
msgstr ""

#: ../../../myst_parser/parsers/options.py:15
msgid ""
"For a good description of multi-line YAML strings, see: "
"https://stackoverflow.com/a/21699210/5033292"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:19
msgid ":py:obj:`Position <myst_parser.parsers.options.Position>`"
msgstr ""

#: ../../../myst_parser/parsers/options.py:28
msgid "Position of a character in a stream."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:22
msgid ":py:obj:`StreamBuffer <myst_parser.parsers.options.StreamBuffer>`"
msgstr ""

#: ../../../myst_parser/parsers/options.py:36
msgid "A buffer for a stream of characters."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:25
msgid ":py:obj:`Token <myst_parser.parsers.options.Token>`"
msgstr ""

#: ../../../myst_parser/parsers/options.py:81
msgid "A parsed token from a directive option stream."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:28
msgid ":py:obj:`KeyToken <myst_parser.parsers.options.KeyToken>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:30
msgid ":py:obj:`ValueToken <myst_parser.parsers.options.ValueToken>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:32
msgid ":py:obj:`ColonToken <myst_parser.parsers.options.ColonToken>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:34
msgid ":py:obj:`State <myst_parser.parsers.options.State>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:45
msgid ":py:obj:`options_to_items <myst_parser.parsers.options.options_to_items>`"
msgstr ""

#: ../../../myst_parser/parsers/options.py:174
msgid "Parse a directive option block into (key, value) tuples."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:154
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:180
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.options.rst:206
msgid "Bases: :py:obj:`myst_parser.parsers.options.Token`"
msgstr ""

#: ../../../myst_parser/parsers/options.py:93
#: ../../../myst_parser/parsers/options.py:101
msgid "The original style of the string."
msgstr ""

#: ../../../myst_parser/parsers/options.py:130
msgid "Clone the error with the given line and column offsets."
msgstr ""

#: ../../../myst_parser/parsers/options.py:176
msgid "The directive option text."
msgstr ""

#: ../../../myst_parser/parsers/options.py:177
msgid "The line offset to apply to the error positions."
msgstr ""

#: ../../../myst_parser/parsers/options.py:178
msgid "The column offset to apply to the error positions."
msgstr ""

#: ../../../myst_parser/parsers/options.py
msgid "raises"
msgstr ""

#: ../../../myst_parser/parsers/options.py:180
msgid "`TokenizeError`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:2
msgid ":py:mod:`myst_parser.parsers.parse_html`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:2
msgid "A simple but complete HTML to Abstract Syntax Tree (AST) parser."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:4
msgid "The AST can also reproduce the HTML text."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:6
#: ../../../myst_parser/sphinx_ext/directives.py:44
msgid "Example::"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:17
msgid ""
"Note: optional tags are not accounted for (see "
"https://html.spec.whatwg.org/multipage/syntax.html#optional-tags)"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:19
msgid ":py:obj:`Attribute <myst_parser.parsers.parse_html.Attribute>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:33
msgid "This class holds the tags's attributes."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:22
msgid ":py:obj:`Element <myst_parser.parsers.parse_html.Element>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:50
msgid "An Element of the xml/html document."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:25
msgid ":py:obj:`Root <myst_parser.parsers.parse_html.Root>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:202
msgid "The root of the AST tree."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:28
msgid ":py:obj:`Tag <myst_parser.parsers.parse_html.Tag>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:210
msgid ""
"Represent xml/html tags under the form: <name key=\"value\" ...> ... "
"</name>."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:31
msgid ":py:obj:`XTag <myst_parser.parsers.parse_html.XTag>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:229
msgid "Represent XHTML style tags with no children, like `<img src=\"t.gif\" />`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:34
msgid ":py:obj:`VoidTag <myst_parser.parsers.parse_html.VoidTag>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:242
msgid ""
"Represent tags with no children, only start tag, like `<img src=\"t.gif\""
" >`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:37
msgid ":py:obj:`TerminalElement <myst_parser.parsers.parse_html.TerminalElement>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:39
msgid ":py:obj:`Data <myst_parser.parsers.parse_html.Data>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:266
msgid "Represent data inside xml/html documents, like raw text."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:42
msgid ":py:obj:`Declaration <myst_parser.parsers.parse_html.Declaration>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:273
msgid "Represent declarations, like `<!DOCTYPE html>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:45
msgid ":py:obj:`Comment <myst_parser.parsers.parse_html.Comment>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:280
msgid "Represent HTML comments"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:48
msgid ":py:obj:`Pi <myst_parser.parsers.parse_html.Pi>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:287
msgid "Represent processing instructions like `<?xml-stylesheet ?>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:51
msgid ":py:obj:`Char <myst_parser.parsers.parse_html.Char>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:294
msgid "Represent character codes like: `&#0`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:54
msgid ":py:obj:`Entity <myst_parser.parsers.parse_html.Entity>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:301
msgid "Represent entities like `&amp`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:57
msgid ":py:obj:`Tree <myst_parser.parsers.parse_html.Tree>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:308
msgid "The engine class to generate the AST tree."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:60
msgid ":py:obj:`HtmlToAst <myst_parser.parsers.parse_html.HtmlToAst>`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:373
msgid "The tokenizer class."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:71
msgid ":py:obj:`tokenize_html <myst_parser.parsers.parse_html.tokenize_html>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:81
msgid "Bases: :py:obj:`dict`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:41
msgid "Return 'class' attribute as list."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:98
msgid "Bases: :py:obj:`collections.abc.MutableSequence`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:52
msgid "All xml/html entities inherit from this class."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:56
msgid "Initialise the element."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:64
msgid "Return parent."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:69
msgid "Return copy of children."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:112
msgid "Recursively copy and remove parent."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:127
msgid "Returns a HTML string representation of the element."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:129
msgid ""
"Provide a dictionary of render function for specific tag names, to "
"override the normal render format"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:146
msgid "Walk through the xml/html AST."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:154
msgid ""
"Return copy with all `Data` tokens that only contain whitespace / "
"newlines removed."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:173
msgid "Find all elements that match name and specific attributes."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:155
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:171
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:185
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:199
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:213
msgid "Bases: :py:obj:`myst_parser.parsers.parse_html.Element`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:205
msgid "Returns a string HTML representation of the structure."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:260
msgid "Copy and remove parent."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:223
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:237
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:251
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:265
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:279
#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:293
msgid "Bases: :py:obj:`myst_parser.parsers.parse_html.TerminalElement`"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:311
msgid "Initialise Tree"
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:318
msgid "Clear the outmost and stack for a new parsing."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:324
msgid "Return the last pointer which point to the actual tag scope."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:328
msgid "Nest a given tag at the bottom of the tree using the last stack's pointer."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:338
msgid "Nest an XTag onto the tree."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:344
msgid "Nest a VoidTag onto the tree."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:350
msgid "Nest the data onto the tree."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:356
msgid ""
"When a closing tag is found, pop the pointer's scope from the stack, to "
"then point to the earlier scope's tag."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:351
msgid "Bases: :py:obj:`html.parser.HTMLParser`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:357
msgid "Initialize and reset this instance."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.parse_html.rst:357
msgid ""
"If convert_charrefs is True (the default), all character references are "
"automatically converted to the corresponding Unicode characters."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:398
msgid "Parse the source string."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:404
msgid "When found an opening tag then nest it onto the tree."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:411
msgid "When found a XHTML tag style then nest it up to the tree."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:415
msgid "When found a closing tag then makes it point to the right scope."
msgstr ""

#: ../../../myst_parser/parsers/parse_html.py:420
msgid "Nest data onto the tree."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst:2
msgid ":py:mod:`myst_parser.parsers.sphinx_`"
msgstr ""

#: ../../../myst_parser/parsers/sphinx_.py:2
msgid "MyST Markdown parser for sphinx."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst:19
msgid ":py:obj:`MystParser <myst_parser.parsers.sphinx_.MystParser>`"
msgstr ""

#: ../../../myst_parser/parsers/sphinx_.py:30
msgid "Sphinx parser for Markedly Structured Text (MyST)."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst:30
msgid ":py:obj:`SPHINX_LOGGER <myst_parser.parsers.sphinx_.SPHINX_LOGGER>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.parsers.sphinx_.rst:46
msgid "Bases: :py:obj:`sphinx.parsers.Parser`"
msgstr ""

#: ../../../myst_parser/parsers/sphinx_.py:38
msgid ""
"Defines runtime settings and associated command-line options, as used by "
"`docutils.frontend.OptionParser`.  This is a concatenation of tuples of:"
msgstr ""

#: ../../../myst_parser/parsers/sphinx_.py:41
msgid ""
"Option group title (string or `None` which implies no group, just a list "
"of single options)."
msgstr ""

#: ../../../myst_parser/parsers/sphinx_.py:44
msgid "Description (string or `None`)."
msgstr ""

#: ../../../myst_parser/parsers/sphinx_.py:46
msgid "A sequence of option tuples"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_.rst:2
msgid ":py:mod:`myst_parser.sphinx_`"
msgstr ""

#: ../../../myst_parser/sphinx_.py:2
msgid ""
"A module for compatibility with the docutils>=0.17 `include` directive, "
"in RST documents."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.rst:2
msgid ":py:mod:`myst_parser.sphinx_ext`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/__init__.py:2
msgid "Sphinx extension for myst_parser."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:2
msgid ":py:mod:`myst_parser.sphinx_ext.directives`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/directives.py:2
msgid "MyST specific directives"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:19
msgid ""
":py:obj:`SubstitutionReferenceRole "
"<myst_parser.sphinx_ext.directives.SubstitutionReferenceRole>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/directives.py:29
msgid "Implement substitution references as a role."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:22
msgid ""
":py:obj:`FigureMarkdown "
"<myst_parser.sphinx_ext.directives.FigureMarkdown>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/directives.py:42
msgid "Directive for creating a figure with Markdown compatible syntax."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:33
msgid ":py:obj:`align <myst_parser.sphinx_ext.directives.align>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:36
msgid ""
":py:obj:`figwidth_value "
"<myst_parser.sphinx_ext.directives.figwidth_value>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:56
msgid "Bases: :py:obj:`sphinx.util.docutils.SphinxRole`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/directives.py:31
msgid "Note, in ``docutils/parsers/rst/roles.py`` this is left unimplemented."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.directives.rst:68
msgid "Bases: :py:obj:`sphinx.util.docutils.SphinxDirective`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/directives.py:132
msgid "A warning for reporting an invalid figure."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.main.rst:2
msgid ":py:mod:`myst_parser.sphinx_ext.main`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/main.py:2
msgid "The setup for the sphinx extension."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.main.rst:19
msgid ":py:obj:`setup_sphinx <myst_parser.sphinx_ext.main.setup_sphinx>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/main.py:24
msgid "Initialize all settings and transforms in Sphinx."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.main.rst:22
msgid ""
":py:obj:`create_myst_config "
"<myst_parser.sphinx_ext.main.create_myst_config>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/main.py:81
msgid "Create the myst config object and add it to the sphinx environment."
msgstr ""

#: ../../../myst_parser/sphinx_ext/main.py:26
msgid "The Sphinx application object."
msgstr ""

#: ../../../myst_parser/sphinx_ext/main.py:27
msgid "Whether to load the parser."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:2
msgid ":py:mod:`myst_parser.sphinx_ext.mathjax`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:2
msgid "Overrides to ``sphinx.ext.mathjax``"
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:4
msgid "This fixes two issues:"
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:6
msgid ""
"Mathjax should not search for ``$`` delimiters, nor LaTeX amsmath "
"environments, since we already achieve this with the dollarmath and "
"amsmath mrakdown-it-py plugins"
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:8
msgid ""
"amsmath math blocks should be wrapped in mathjax delimiters (default "
"``\\[...\\]``), and assigned an equation number"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:19
msgid ""
":py:obj:`log_override_warning "
"<myst_parser.sphinx_ext.mathjax.log_override_warning>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:25
msgid "Log a warning if MathJax configuration being overridden."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:22
msgid ""
":py:obj:`override_mathjax "
"<myst_parser.sphinx_ext.mathjax.override_mathjax>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:41
msgid "Override aspects of the mathjax extension."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:25
msgid ""
":py:obj:`html_visit_displaymath "
"<myst_parser.sphinx_ext.mathjax.html_visit_displaymath>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:97
msgid "Override for sphinx.ext.mathjax.html_visit_displaymath to handle amsmath."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.mathjax.rst:36
msgid ":py:obj:`logger <myst_parser.sphinx_ext.mathjax.logger>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:43
msgid ""
"MyST-Parser parses dollar and latex math, via markdown-it plugins. "
"Therefore, we tell Mathjax to only render these HTML elements. This is "
"accompanied by setting the `ignoreClass` on the top-level section of each"
" MyST document."
msgstr ""

#: ../../../myst_parser/sphinx_ext/mathjax.py:99
msgid ""
"By default displaymath, are normally wrapped in a prefix/suffix, defined "
"by mathjax_display, and labelled nodes are numbered. However, this is not"
" the case if the math_block is set as 'nowrap', as for amsmath. "
"Therefore, we need to override this behaviour."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:2
msgid ":py:mod:`myst_parser.sphinx_ext.myst_refs`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:2
msgid ""
"A post-transform for overriding the behaviour of sphinx reference "
"resolution."
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:4
msgid ""
"This is applied to MyST type references only, such as ``[text](target)``,"
" and allows for nested syntax"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:19
msgid ""
":py:obj:`MystReferenceResolver "
"<myst_parser.sphinx_ext.myst_refs.MystReferenceResolver>`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:33
msgid "Resolves cross-references on doctrees."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:30
msgid ":py:obj:`LOGGER <myst_parser.sphinx_ext.myst_refs.LOGGER>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.sphinx_ext.myst_refs.rst:46
msgid "Bases: :py:obj:`sphinx.transforms.post_transforms.ReferencesResolver`"
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:35
msgid "Overrides default sphinx implementation, to allow for nested syntax"
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:41
msgid "Log a warning, with a myst type and specific subtype."
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:131
msgid ""
"Resolve a reference, from a markdown link, to another document, "
"optionally with a target id within that document."
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:187
msgid "Resolve reference generated by the \"myst\" role; ``[text](#reference)``."
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:189
msgid "This builds on the sphinx ``any`` role to also resolve:"
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:191
msgid "Document references with extensions; ``[text](./doc.md)``"
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:192
msgid "Document references with anchors with anchors; ``[text](./doc.md#target)``"
msgstr ""

#: ../../../myst_parser/sphinx_ext/myst_refs.py:193
msgid ""
"Nested syntax for explicit text with std:doc and std:ref; "
"``[**nested**](reference)``"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:2
msgid ":py:mod:`myst_parser.warnings_`"
msgstr ""

#: ../../../myst_parser/warnings_.py:2
msgid "Central handling of warnings for the myst extension."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:19
msgid ":py:obj:`MystWarnings <myst_parser.warnings_.MystWarnings>`"
msgstr ""

#: ../../../myst_parser/warnings_.py:13
msgid "MyST warning types."
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:30
msgid ":py:obj:`create_warning <myst_parser.warnings_.create_warning>`"
msgstr ""

#: ../../../docs/apidocs/myst_parser/myst_parser.warnings_.rst:40
msgid "Bases: :py:obj:`enum.Enum`"
msgstr ""

#: ../../../myst_parser/warnings_.py:16
msgid "Deprecated usage."
msgstr ""

#: ../../../myst_parser/warnings_.py:18
msgid "Functionality that is not yet supported in docutils."
msgstr ""

#: ../../../myst_parser/warnings_.py:21
msgid "The render method is not implemented."
msgstr ""

#: ../../../myst_parser/warnings_.py:24
msgid "Issue reading front-matter."
msgstr ""

#: ../../../myst_parser/warnings_.py:26
msgid "Duplicate Markdown reference definition."
msgstr ""

#: ../../../myst_parser/warnings_.py:28
msgid "Non-consecutive heading levels."
msgstr ""

#: ../../../myst_parser/warnings_.py:31
msgid "Issue parsing directive."
msgstr ""

#: ../../../myst_parser/warnings_.py:33
msgid "Issue parsing directive options."
msgstr ""

#: ../../../myst_parser/warnings_.py:35
msgid ""
"Directive options has # comments, which may not be supported in future "
"versions."
msgstr ""

#: ../../../myst_parser/warnings_.py:37
msgid "Issue parsing directive body."
msgstr ""

#: ../../../myst_parser/warnings_.py:39
msgid "Unknown directive."
msgstr ""

#: ../../../myst_parser/warnings_.py:41
msgid "Unknown role."
msgstr ""

#: ../../../myst_parser/warnings_.py:45
msgid "Multiple targets were found for a cross-reference."
msgstr ""

#: ../../../myst_parser/warnings_.py:47
msgid "A target was not found for a cross-reference."
msgstr ""

#: ../../../myst_parser/warnings_.py:49
msgid "Failure to retrieve or load an inventory."
msgstr ""

#: ../../../myst_parser/warnings_.py:51
msgid "A target was not found for an inventory reference."
msgstr ""

#: ../../../myst_parser/warnings_.py:53
msgid "Multiple targets were found for an inventory reference."
msgstr ""

#: ../../../myst_parser/warnings_.py:55
msgid "A legacy domain found, which does not support `resolve_any_xref`."
msgstr ""

#: ../../../myst_parser/warnings_.py:59
msgid "An error occurred computing a heading slug."
msgstr ""

#: ../../../myst_parser/warnings_.py:61
msgid "Strikethrough warning, since only implemented in HTML."
msgstr ""

#: ../../../myst_parser/warnings_.py:63
msgid "HTML could not be parsed."
msgstr ""

#: ../../../myst_parser/warnings_.py:65
msgid "Invalid attribute value."
msgstr ""

#: ../../../myst_parser/warnings_.py:67
msgid "Substitution could not be resolved."
msgstr ""

